# Raw commands:
- module: muninnode
  controller: general
  command: get
  method: "GET"
- module: muninnode
  controller: general
  command: set
  method: "POST"
- module: muninnode
  controller: service
  command: reconfigure
  method: "POST"
- module: muninnode
  controller: service
  command: restart
  method: "POST"
- module: muninnode
  controller: service
  command: start
  method: "POST"
- module: muninnode
  controller: service
  command: status
  method: "GET"
- module: muninnode
  controller: service
  command: stop
  method: "POST"
- module: smart
  controller: service
  command: abort
  method: "POST"
- module: smart
  controller: service
  command: info
  method: "POST"
- module: smart
  controller: service
  command: list
  method: "POST"
- module: smart
  controller: service
  command: logs
  method: "POST"
- module: smart
  controller: service
  command: test
  method: "POST"
- module: diagnostics
  controller: activity
  command: getActivity
  method: "GET"
- module: diagnostics
  controller: dns
  command: reverseLookup
  method: "GET"
- module: diagnostics
  controller: dns_diagnostics
  command: get
  method: "GET"
- module: diagnostics
  controller: dns_diagnostics
  command: set
  method: "GET"
- module: diagnostics
  controller: firewall
  command: delState
  method: "POST"
  parameters:
    - $stateid
    - $creatorid
- module: diagnostics
  controller: firewall
  command: flushSources
  method: "POST"
- module: diagnostics
  controller: firewall
  command: flushStates
  method: "POST"
- module: diagnostics
  controller: firewall
  command: killStates
  method: "POST"
- module: diagnostics
  controller: firewall
  command: listRuleIds
  method: "GET"
- module: diagnostics
  controller: firewall
  command: log
  method: "GET"
- module: diagnostics
  controller: firewall
  command: logFilters
  method: "GET"
- module: diagnostics
  controller: firewall
  command: pfStatistics
  method: "GET"
  parameters:
    - $section=null
- module: diagnostics
  controller: firewall
  command: queryPfTop
  method: "POST"
- module: diagnostics
  controller: firewall
  command: queryStates
  method: "POST"
- module: diagnostics
  controller: firewall
  command: stats
  method: "GET"
- module: diagnostics
  controller: interface
  command: CarpStatus
  method: "POST"
  parameters:
    - $status
- module: diagnostics
  controller: interface
  command: delRoute
  method: "POST"
- module: diagnostics
  controller: interface
  command: flushArp
  method: "POST"
- module: diagnostics
  controller: interface
  command: getArp
  method: "GET"
- module: diagnostics
  controller: interface
  command: getBpfStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getInterfaceConfig
  method: "GET"
- module: diagnostics
  controller: interface
  command: getInterfaceNames
  method: "GET"
- module: diagnostics
  controller: interface
  command: getInterfaceStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getMemoryStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getNdp
  method: "GET"
- module: diagnostics
  controller: interface
  command: getNetisrStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getPfSyncNodes
  method: "GET"
- module: diagnostics
  controller: interface
  command: getProtocolStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getRoutes
  method: "GET"
- module: diagnostics
  controller: interface
  command: getSocketStatistics
  method: "GET"
- module: diagnostics
  controller: interface
  command: getVipStatus
  method: "GET"
- module: diagnostics
  controller: interface
  command: searchArp
  method: "GET"
- module: diagnostics
  controller: interface
  command: searchNdp
  method: "GET"
- module: diagnostics
  controller: lvtemplate
  command: addItem
  method: "POST"
- module: diagnostics
  controller: lvtemplate
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: diagnostics
  controller: lvtemplate
  command: get
  method: "GET"
- module: diagnostics
  controller: lvtemplate
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: diagnostics
  controller: lvtemplate
  command: searchItem
  method: "GET"
- module: diagnostics
  controller: lvtemplate
  command: set
  method: "POST"
- module: diagnostics
  controller: lvtemplate
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: diagnostics
  controller: netflow
  command: cacheStats
  method: "GET"
- module: diagnostics
  controller: netflow
  command: getconfig
  method: "GET"
- module: diagnostics
  controller: netflow
  command: isEnabled
  method: "GET"
- module: diagnostics
  controller: netflow
  command: reconfigure
  method: "POST"
- module: diagnostics
  controller: netflow
  command: setconfig
  method: "GET"
- module: diagnostics
  controller: netflow
  command: status
  method: "GET"
- module: diagnostics
  controller: networkinsight
  command: getInterfaces
  method: "GET"
- module: diagnostics
  controller: networkinsight
  command: getMetadata
  method: "GET"
- module: diagnostics
  controller: networkinsight
  command: getProtocols
  method: "GET"
- module: diagnostics
  controller: networkinsight
  command: getServices
  method: "GET"
- module: diagnostics
  controller: packet_capture
  command: download
  method: "GET"
  parameters:
    - $jobid
- module: diagnostics
  controller: packet_capture
  command: get
  method: "GET"
- module: diagnostics
  controller: packet_capture
  command: macInfo
  method: "GET"
  parameters:
    - $macaddr
- module: diagnostics
  controller: packet_capture
  command: remove
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: packet_capture
  command: searchJobs
  method: "GET"
- module: diagnostics
  controller: packet_capture
  command: set
  method: "GET"
- module: diagnostics
  controller: packet_capture
  command: start
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: packet_capture
  command: stop
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: packet_capture
  command: view
  method: "GET"
  parameters:
    - $jobid
    - $detail='normal'
- module: diagnostics
  controller: ping
  command: get
  method: "GET"
- module: diagnostics
  controller: ping
  command: remove
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: ping
  command: searchJobs
  method: "GET"
- module: diagnostics
  controller: ping
  command: set
  method: "GET"
- module: diagnostics
  controller: ping
  command: start
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: ping
  command: stop
  method: "POST"
  parameters:
    - $jobid
- module: diagnostics
  controller: portprobe
  command: get
  method: "GET"
- module: diagnostics
  controller: portprobe
  command: set
  method: "GET"
- module: diagnostics
  controller: system
  command: memory
  method: "GET"
- module: diagnostics
  controller: systemhealth
  command: getInterfaces
  method: "GET"
- module: diagnostics
  controller: systemhealth
  command: getRRDlist
  method: "GET"
- module: diagnostics
  controller: traceroute
  command: get
  method: "GET"
- module: diagnostics
  controller: traceroute
  command: set
  method: "GET"
- module: diagnostics
  controller: traffic
  command: Interface
  method: "GET"
- module: diagnostics
  controller: traffic
  command: Top
  method: "GET"
  parameters:
    - $interfaces
- module: diagnostics
  controller: proofpoint_et
  command: status
  method: "GET"
- module: ftpproxy
  controller: service
  command: config
  method: "POST"
- module: ftpproxy
  controller: service
  command: reload
  method: "POST"
- module: ftpproxy
  controller: service
  command: restart
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: service
  command: start
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: service
  command: status
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: service
  command: stop
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: settings
  command: addProxy
  method: "POST"
- module: ftpproxy
  controller: settings
  command: delProxy
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: settings
  command: getProxy
  method: "GET"
  parameters:
    - $uuid=null
- module: ftpproxy
  controller: settings
  command: searchProxy
  method: "GET"
- module: ftpproxy
  controller: settings
  command: setProxy
  method: "POST"
  parameters:
    - $uuid
- module: ftpproxy
  controller: settings
  command: toggleProxy
  method: "POST"
  parameters:
    - $uuid
- module: collectd
  controller: general
  command: get
  method: "GET"
- module: collectd
  controller: general
  command: set
  method: "POST"
- module: collectd
  controller: service
  command: reconfigure
  method: "POST"
- module: collectd
  controller: service
  command: restart
  method: "POST"
- module: collectd
  controller: service
  command: start
  method: "POST"
- module: collectd
  controller: service
  command: status
  method: "GET"
- module: collectd
  controller: service
  command: stop
  method: "POST"
- module: lldpd
  controller: general
  command: get
  method: "GET"
- module: lldpd
  controller: general
  command: set
  method: "POST"
- module: lldpd
  controller: service
  command: neighbor
  method: "GET"
- module: lldpd
  controller: service
  command: reconfigure
  method: "POST"
- module: lldpd
  controller: service
  command: restart
  method: "POST"
- module: lldpd
  controller: service
  command: start
  method: "POST"
- module: lldpd
  controller: service
  command: status
  method: "GET"
- module: lldpd
  controller: service
  command: stop
  method: "POST"
- module: puppetagent
  controller: service
  command: reconfigure
  method: "POST"
- module: puppetagent
  controller: service
  command: restart
  method: "POST"
- module: puppetagent
  controller: service
  command: start
  method: "POST"
- module: puppetagent
  controller: service
  command: status
  method: "GET"
- module: puppetagent
  controller: service
  command: stop
  method: "POST"
- module: puppetagent
  controller: settings
  command: get
  method: "GET"
- module: puppetagent
  controller: settings
  command: set
  method: "POST"
- module: interfaces
  controller: lagg_settings
  command: addItem
  method: "POST"
- module: interfaces
  controller: lagg_settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: lagg_settings
  command: get
  method: "GET"
- module: interfaces
  controller: lagg_settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: interfaces
  controller: lagg_settings
  command: reconfigure
  method: "POST"
- module: interfaces
  controller: lagg_settings
  command: searchItem
  method: "GET"
- module: interfaces
  controller: lagg_settings
  command: set
  method: "POST"
- module: interfaces
  controller: lagg_settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: loopback_settings
  command: addItem
  method: "POST"
- module: interfaces
  controller: loopback_settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: loopback_settings
  command: get
  method: "GET"
- module: interfaces
  controller: loopback_settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: interfaces
  controller: loopback_settings
  command: reconfigure
  method: "POST"
- module: interfaces
  controller: loopback_settings
  command: searchItem
  method: "GET"
- module: interfaces
  controller: loopback_settings
  command: set
  method: "POST"
- module: interfaces
  controller: loopback_settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vip_settings
  command: addItem
  method: "POST"
- module: interfaces
  controller: vip_settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vip_settings
  command: get
  method: "GET"
- module: interfaces
  controller: vip_settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: interfaces
  controller: vip_settings
  command: getUnusedVhid
  method: "GET"
- module: interfaces
  controller: vip_settings
  command: reconfigure
  method: "POST"
- module: interfaces
  controller: vip_settings
  command: searchItem
  method: "GET"
- module: interfaces
  controller: vip_settings
  command: set
  method: "POST"
- module: interfaces
  controller: vip_settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vlan_settings
  command: addItem
  method: "POST"
- module: interfaces
  controller: vlan_settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vlan_settings
  command: get
  method: "GET"
- module: interfaces
  controller: vlan_settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: interfaces
  controller: vlan_settings
  command: reconfigure
  method: "POST"
- module: interfaces
  controller: vlan_settings
  command: searchItem
  method: "GET"
- module: interfaces
  controller: vlan_settings
  command: set
  method: "POST"
- module: interfaces
  controller: vlan_settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vxlan_settings
  command: addItem
  method: "POST"
- module: interfaces
  controller: vxlan_settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: interfaces
  controller: vxlan_settings
  command: get
  method: "GET"
- module: interfaces
  controller: vxlan_settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: interfaces
  controller: vxlan_settings
  command: reconfigure
  method: "POST"
- module: interfaces
  controller: vxlan_settings
  command: searchItem
  method: "GET"
- module: interfaces
  controller: vxlan_settings
  command: set
  method: "POST"
- module: interfaces
  controller: vxlan_settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: openvpn
  controller: client_overwrites
  command: add
  method: "POST"
- module: openvpn
  controller: client_overwrites
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: openvpn
  controller: client_overwrites
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: openvpn
  controller: client_overwrites
  command: search
  method: "GET"
- module: openvpn
  controller: client_overwrites
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: openvpn
  controller: client_overwrites
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: openvpn
  controller: export
  command: accounts
  method: "GET"
  parameters:
    - $vpnid=null
- module: openvpn
  controller: export
  command: download
  method: "POST"
  parameters:
    - $vpnid
    - $certref=null
- module: openvpn
  controller: export
  command: providers
  method: "GET"
- module: openvpn
  controller: export
  command: storePresets
  method: "POST"
  parameters:
    - $vpnid
- module: openvpn
  controller: export
  command: templates
  method: "GET"
- module: openvpn
  controller: export
  command: validatePresets
  method: "POST"
  parameters:
    - $vpnid
- module: openvpn
  controller: instances
  command: add
  method: "POST"
- module: openvpn
  controller: instances
  command: addStaticKey
  method: "POST"
- module: openvpn
  controller: instances
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: openvpn
  controller: instances
  command: delStaticKey
  method: "GET"
  parameters:
    - $uuid
- module: openvpn
  controller: instances
  command: genKey
  method: "GET"
- module: openvpn
  controller: instances
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: openvpn
  controller: instances
  command: getStaticKey
  method: "GET"
  parameters:
    - $uuid=null
- module: openvpn
  controller: instances
  command: search
  method: "GET"
- module: openvpn
  controller: instances
  command: searchStaticKey
  method: "GET"
- module: openvpn
  controller: instances
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: openvpn
  controller: instances
  command: setStaticKey
  method: "POST"
  parameters:
    - $uuid=null
- module: openvpn
  controller: instances
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: openvpn
  controller: service
  command: killSession
  method: "POST"
- module: openvpn
  controller: service
  command: reconfigure
  method: "POST"
- module: openvpn
  controller: service
  command: restartService
  method: "POST"
  parameters:
    - $id=null
- module: openvpn
  controller: service
  command: searchRoutes
  method: "GET"
- module: openvpn
  controller: service
  command: searchSessions
  method: "GET"
- module: openvpn
  controller: service
  command: startService
  method: "POST"
  parameters:
    - $id=null
- module: openvpn
  controller: service
  command: stopService
  method: "POST"
  parameters:
    - $id=null
- module: dnscryptproxy
  controller: cloak
  command: addCloak
  method: "POST"
- module: dnscryptproxy
  controller: cloak
  command: delCloak
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: cloak
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: cloak
  command: getCloak
  method: "GET"
  parameters:
    - $uuid=null
- module: dnscryptproxy
  controller: cloak
  command: searchCloak
  method: "GET"
- module: dnscryptproxy
  controller: cloak
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: cloak
  command: setCloak
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: cloak
  command: toggleCloak
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: dnsbl
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: dnsbl
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: forward
  command: addForward
  method: "POST"
- module: dnscryptproxy
  controller: forward
  command: delForward
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: forward
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: forward
  command: getForward
  method: "GET"
  parameters:
    - $uuid=null
- module: dnscryptproxy
  controller: forward
  command: searchForward
  method: "GET"
- module: dnscryptproxy
  controller: forward
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: forward
  command: setForward
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: forward
  command: toggleForward
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: general
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: general
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: server
  command: addServer
  method: "POST"
- module: dnscryptproxy
  controller: server
  command: delServer
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: server
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: server
  command: getServer
  method: "GET"
  parameters:
    - $uuid=null
- module: dnscryptproxy
  controller: server
  command: searchServer
  method: "GET"
- module: dnscryptproxy
  controller: server
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: server
  command: setServer
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: server
  command: toggleServer
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: service
  command: dnsbl
  method: "GET"
- module: dnscryptproxy
  controller: service
  command: reconfigure
  method: "POST"
- module: dnscryptproxy
  controller: service
  command: restart
  method: "POST"
- module: dnscryptproxy
  controller: service
  command: start
  method: "POST"
- module: dnscryptproxy
  controller: service
  command: status
  method: "GET"
- module: dnscryptproxy
  controller: service
  command: stop
  method: "POST"
- module: dnscryptproxy
  controller: whitelist
  command: addWhitelist
  method: "POST"
- module: dnscryptproxy
  controller: whitelist
  command: delWhitelist
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: whitelist
  command: get
  method: "GET"
- module: dnscryptproxy
  controller: whitelist
  command: getWhitelist
  method: "GET"
  parameters:
    - $uuid=null
- module: dnscryptproxy
  controller: whitelist
  command: searchWhitelist
  method: "GET"
- module: dnscryptproxy
  controller: whitelist
  command: set
  method: "POST"
- module: dnscryptproxy
  controller: whitelist
  command: setWhitelist
  method: "POST"
  parameters:
    - $uuid
- module: dnscryptproxy
  controller: whitelist
  command: toggleWhitelist
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: export
  command: config
  method: "GET"
- module: haproxy
  controller: export
  command: diff
  method: "GET"
- module: haproxy
  controller: export
  command: download
  method: "GET"
  parameters:
    - $type
- module: haproxy
  controller: maintenance
  command: certActions
  method: "GET"
- module: haproxy
  controller: maintenance
  command: certDiff
  method: "GET"
- module: haproxy
  controller: maintenance
  command: certSync
  method: "GET"
- module: haproxy
  controller: maintenance
  command: certSyncBulk
  method: "GET"
- module: haproxy
  controller: maintenance
  command: fetchCronIntegration
  method: "POST"
- module: haproxy
  controller: maintenance
  command: get
  method: "GET"
- module: haproxy
  controller: maintenance
  command: searchCertificateDiff
  method: "GET"
- module: haproxy
  controller: maintenance
  command: searchServer
  method: "GET"
- module: haproxy
  controller: maintenance
  command: serverState
  method: "GET"
- module: haproxy
  controller: maintenance
  command: serverStateBulk
  method: "GET"
- module: haproxy
  controller: maintenance
  command: serverWeight
  method: "GET"
- module: haproxy
  controller: maintenance
  command: serverWeightBulk
  method: "GET"
- module: haproxy
  controller: maintenance
  command: set
  method: "POST"
- module: haproxy
  controller: service
  command: configtest
  method: "GET"
- module: haproxy
  controller: service
  command: reconfigure
  method: "POST"
- module: haproxy
  controller: service
  command: restart
  method: "POST"
- module: haproxy
  controller: service
  command: start
  method: "POST"
- module: haproxy
  controller: service
  command: status
  method: "GET"
- module: haproxy
  controller: service
  command: stop
  method: "POST"
- module: haproxy
  controller: settings
  command: addAcl
  method: "POST"
- module: haproxy
  controller: settings
  command: addAction
  method: "POST"
- module: haproxy
  controller: settings
  command: addBackend
  method: "POST"
- module: haproxy
  controller: settings
  command: addCpu
  method: "POST"
- module: haproxy
  controller: settings
  command: addErrorfile
  method: "POST"
- module: haproxy
  controller: settings
  command: addFcgi
  method: "POST"
- module: haproxy
  controller: settings
  command: addFrontend
  method: "POST"
- module: haproxy
  controller: settings
  command: addGroup
  method: "POST"
- module: haproxy
  controller: settings
  command: addHealthcheck
  method: "POST"
- module: haproxy
  controller: settings
  command: addLua
  method: "POST"
- module: haproxy
  controller: settings
  command: addMapfile
  method: "POST"
- module: haproxy
  controller: settings
  command: addServer
  method: "POST"
- module: haproxy
  controller: settings
  command: addUser
  method: "POST"
- module: haproxy
  controller: settings
  command: addmailer
  method: "POST"
- module: haproxy
  controller: settings
  command: addresolver
  method: "POST"
- module: haproxy
  controller: settings
  command: delAcl
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delAction
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delBackend
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delCpu
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delErrorfile
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delFcgi
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delFrontend
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delGroup
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delHealthcheck
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delLua
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delMapfile
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delServer
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delUser
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delmailer
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: delresolver
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: get
  method: "GET"
- module: haproxy
  controller: settings
  command: getAcl
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getAction
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getBackend
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getCpu
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getErrorfile
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getFcgi
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getFrontend
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getGroup
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getHealthcheck
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getLua
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getMapfile
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getServer
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getUser
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getmailer
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: getresolver
  method: "GET"
  parameters:
    - $uuid=null
- module: haproxy
  controller: settings
  command: searchAcls
  method: "GET"
- module: haproxy
  controller: settings
  command: searchActions
  method: "GET"
- module: haproxy
  controller: settings
  command: searchBackends
  method: "GET"
- module: haproxy
  controller: settings
  command: searchCpus
  method: "GET"
- module: haproxy
  controller: settings
  command: searchErrorfiles
  method: "GET"
- module: haproxy
  controller: settings
  command: searchFcgis
  method: "GET"
- module: haproxy
  controller: settings
  command: searchFrontends
  method: "GET"
- module: haproxy
  controller: settings
  command: searchGroups
  method: "GET"
- module: haproxy
  controller: settings
  command: searchHealthchecks
  method: "GET"
- module: haproxy
  controller: settings
  command: searchLuas
  method: "GET"
- module: haproxy
  controller: settings
  command: searchMapfiles
  method: "GET"
- module: haproxy
  controller: settings
  command: searchServers
  method: "GET"
- module: haproxy
  controller: settings
  command: searchUsers
  method: "GET"
- module: haproxy
  controller: settings
  command: searchmailers
  method: "GET"
- module: haproxy
  controller: settings
  command: searchresolvers
  method: "GET"
- module: haproxy
  controller: settings
  command: set
  method: "POST"
- module: haproxy
  controller: settings
  command: setAcl
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setAction
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setBackend
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setCpu
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setErrorfile
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setFcgi
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setFrontend
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setGroup
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setHealthcheck
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setLua
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setMapfile
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setServer
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setUser
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setmailer
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: setresolver
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: toggleBackend
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleCpu
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleFrontend
  method: "POST"
  parameters:
    - $uuid
- module: haproxy
  controller: settings
  command: toggleGroup
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleLua
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleServer
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleUser
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: togglemailer
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: settings
  command: toggleresolver
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: haproxy
  controller: statistics
  command: counters
  method: "GET"
- module: haproxy
  controller: statistics
  command: info
  method: "GET"
- module: haproxy
  controller: statistics
  command: tables
  method: "GET"
- module: relayd
  controller: service
  command: configtest
  method: "POST"
- module: relayd
  controller: service
  command: reconfigure
  method: "POST"
- module: relayd
  controller: service
  command: restart
  method: "POST"
- module: relayd
  controller: service
  command: start
  method: "POST"
- module: relayd
  controller: service
  command: status
  method: "GET"
- module: relayd
  controller: service
  command: stop
  method: "POST"
- module: relayd
  controller: settings
  command: del
  method: "GET"
  parameters:
    - $nodeType=null
    - $uuid=null
- module: relayd
  controller: settings
  command: dirty
  method: "GET"
- module: relayd
  controller: settings
  command: get
  method: "GET"
  parameters:
    - $nodeType=null
    - $uuid=null
- module: relayd
  controller: settings
  command: search
  method: "POST"
  parameters:
    - $nodeType=null
- module: relayd
  controller: settings
  command: set
  method: "POST"
  parameters:
    - $nodeType=null
    - $uuid=null
- module: relayd
  controller: settings
  command: toggle
  method: "POST"
  parameters:
    - $nodeType
    - $uuid
    - $enabled=null
- module: relayd
  controller: status
  command: sum
  method: "GET"
  parameters:
    - $wait=0
- module: relayd
  controller: status
  command: toggle
  method: "POST"
  parameters:
    - $nodeType=null
    - $id=null
    - $action=null
- module: softether
  controller: general
  command: get
  method: "GET"
- module: softether
  controller: general
  command: set
  method: "POST"
- module: softether
  controller: service
  command: reconfigure
  method: "POST"
- module: softether
  controller: service
  command: restart
  method: "POST"
- module: softether
  controller: service
  command: start
  method: "POST"
- module: softether
  controller: service
  command: status
  method: "GET"
- module: softether
  controller: service
  command: stop
  method: "POST"
- module: chrony
  controller: general
  command: get
  method: "GET"
- module: chrony
  controller: general
  command: set
  method: "POST"
- module: chrony
  controller: service
  command: chronyauthdata
  method: "GET"
- module: chrony
  controller: service
  command: chronysources
  method: "GET"
- module: chrony
  controller: service
  command: chronysourcestats
  method: "GET"
- module: chrony
  controller: service
  command: chronytracking
  method: "GET"
- module: chrony
  controller: service
  command: reconfigure
  method: "POST"
- module: chrony
  controller: service
  command: restart
  method: "POST"
- module: chrony
  controller: service
  command: start
  method: "POST"
- module: chrony
  controller: service
  command: status
  method: "GET"
- module: chrony
  controller: service
  command: stop
  method: "POST"
- module: shadowsocks
  controller: general
  command: get
  method: "GET"
- module: shadowsocks
  controller: general
  command: set
  method: "POST"
- module: shadowsocks
  controller: local
  command: get
  method: "GET"
- module: shadowsocks
  controller: local
  command: set
  method: "POST"
- module: shadowsocks
  controller: localservice
  command: reconfigure
  method: "POST"
- module: shadowsocks
  controller: localservice
  command: restart
  method: "POST"
- module: shadowsocks
  controller: localservice
  command: start
  method: "POST"
- module: shadowsocks
  controller: localservice
  command: status
  method: "GET"
- module: shadowsocks
  controller: localservice
  command: stop
  method: "POST"
- module: shadowsocks
  controller: service
  command: reconfigure
  method: "POST"
- module: shadowsocks
  controller: service
  command: restart
  method: "POST"
- module: shadowsocks
  controller: service
  command: start
  method: "POST"
- module: shadowsocks
  controller: service
  command: status
  method: "GET"
- module: shadowsocks
  controller: service
  command: stop
  method: "POST"
- module: zerotier
  controller: network
  command: add
  method: "POST"
- module: zerotier
  controller: network
  command: del
  method: "POST"
  parameters:
    - $uuid=null
- module: zerotier
  controller: network
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: zerotier
  controller: network
  command: info
  method: "GET"
  parameters:
    - $uuid=null
- module: zerotier
  controller: network
  command: search
  method: "GET"
- module: zerotier
  controller: network
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: zerotier
  controller: network
  command: toggle
  method: "POST"
  parameters:
    - $uuid=null
- module: zerotier
  controller: settings
  command: get
  method: "GET"
- module: zerotier
  controller: settings
  command: set
  method: "POST"
- module: zerotier
  controller: settings
  command: status
  method: "GET"
- module: opnsense
  controller: index
  command: handleError
  method: "GET"
  parameters:
    - $message=null
    - $sender=null
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: session
  command: index
  method: "GET"
- module: opnsense
  controller: voucher
  command: index
  method: "GET"
- module: opnsense
  controller: firmware
  command: index
  method: "GET"
- module: opnsense
  controller: halt
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: license
  command: index
  method: "GET"
- module: opnsense
  controller: reboot
  command: index
  method: "GET"
- module: opnsense
  controller: service
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: item
  command: open
  method: "GET"
  parameters:
    - $uuid=null
- module: opnsense
  controller: leases
  command: index
  method: "GET"
- module: opnsense
  controller: leases
  command: index
  method: "GET"
- module: opnsense
  controller: activity
  command: index
  method: "GET"
- module: opnsense
  controller: dns_diagnostics
  command: index
  method: "GET"
- module: opnsense
  controller: firewall
  command: log
  method: "GET"
- module: opnsense
  controller: firewall
  command: pfTop
  method: "GET"
- module: opnsense
  controller: firewall
  command: states
  method: "GET"
- module: opnsense
  controller: firewall
  command: statistics
  method: "GET"
- module: opnsense
  controller: firewall
  command: stats
  method: "GET"
- module: opnsense
  controller: interface
  command: arp
  method: "GET"
- module: opnsense
  controller: interface
  command: ndp
  method: "GET"
- module: opnsense
  controller: interface
  command: netstat
  method: "GET"
- module: opnsense
  controller: interface
  command: routes
  method: "GET"
- module: opnsense
  controller: interface
  command: vip
  method: "GET"
- module: opnsense
  controller: netflow
  command: index
  method: "GET"
- module: opnsense
  controller: networkinsight
  command: index
  method: "GET"
- module: opnsense
  controller: packet_capture
  command: index
  method: "GET"
- module: opnsense
  controller: ping
  command: index
  method: "GET"
- module: opnsense
  controller: portprobe
  command: index
  method: "GET"
- module: opnsense
  controller: system
  command: memory
  method: "GET"
- module: opnsense
  controller: systemhealth
  command: index
  method: "GET"
- module: opnsense
  controller: traceroute
  command: index
  method: "GET"
- module: opnsense
  controller: traffic
  command: index
  method: "GET"
- module: opnsense
  controller: alias
  command: index
  method: "GET"
  parameters:
    - $selected=null
- module: opnsense
  controller: alias_util
  command: index
  method: "GET"
  parameters:
    - $selected=null
- module: opnsense
  controller: category
  command: index
  method: "GET"
  parameters:
    - $selected=null
- module: opnsense
  controller: group
  command: index
  method: "GET"
  parameters:
    - $selected=null
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: policy
  command: index
  method: "GET"
- module: opnsense
  controller: connections
  command: index
  method: "GET"
- module: opnsense
  controller: key_pairs
  command: index
  method: "GET"
- module: opnsense
  controller: leases
  command: index
  method: "GET"
- module: opnsense
  controller: pre_shared_keys
  command: index
  method: "GET"
- module: opnsense
  controller: sad
  command: index
  method: "GET"
- module: opnsense
  controller: sessions
  command: index
  method: "GET"
- module: opnsense
  controller: spd
  command: index
  method: "GET"
- module: opnsense
  controller: tunnels
  command: index
  method: "GET"
- module: opnsense
  controller: vti
  command: index
  method: "GET"
- module: opnsense
  controller: lagg
  command: index
  method: "GET"
  parameters:
    - $selected=null
- module: opnsense
  controller: loopback
  command: index
  method: "GET"
- module: opnsense
  controller: vip
  command: index
  method: "GET"
- module: opnsense
  controller: vlan
  command: index
  method: "GET"
- module: opnsense
  controller: vxlan
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: status
  command: index
  method: "GET"
- module: opnsense
  controller: client_overwrites
  command: index
  method: "GET"
- module: opnsense
  controller: export
  command: index
  method: "GET"
- module: opnsense
  controller: instances
  command: index
  method: "GET"
- module: opnsense
  controller: status
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: service
  command: statistics
  method: "GET"
- module: opnsense
  controller: acl
  command: index
  method: "GET"
- module: opnsense
  controller: advanced
  command: index
  method: "GET"
- module: opnsense
  controller: dnsbl
  command: index
  method: "GET"
- module: opnsense
  controller: dot
  command: index
  method: "GET"
- module: opnsense
  controller: forward
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: overrides
  command: index
  method: "GET"
- module: opnsense
  controller: overview
  command: index
  method: "GET"
- module: opnsense
  controller: stats
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: logs
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: address
  command: index
  method: "GET"
- module: opnsense
  controller: domain
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: headerchecks
  command: index
  method: "GET"
- module: opnsense
  controller: recipient
  command: index
  method: "GET"
- module: opnsense
  controller: recipientbcc
  command: index
  method: "GET"
- module: opnsense
  controller: sender
  command: index
  method: "GET"
- module: opnsense
  controller: senderbcc
  command: index
  method: "GET"
- module: opnsense
  controller: sendercanonical
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: filter
  command: index
  method: "GET"
- module: opnsense
  controller: source_nat
  command: index
  method: "GET"
- module: opnsense
  controller: client
  command: index
  method: "GET"
- module: opnsense
  controller: dhcp
  command: index
  method: "GET"
- module: opnsense
  controller: eap
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: ldap
  command: index
  method: "GET"
- module: opnsense
  controller: lease
  command: index
  method: "GET"
- module: opnsense
  controller: proxy
  command: index
  method: "GET"
- module: opnsense
  controller: user
  command: index
  method: "GET"
- module: opnsense
  controller: bfd
  command: index
  method: "GET"
- module: opnsense
  controller: bgp
  command: index
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: bfd
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: bgp
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: general
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: ospf
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: ospfv3
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: isis
  command: index
  method: "GET"
- module: opnsense
  controller: ospf6
  command: index
  method: "GET"
- module: opnsense
  controller: ospf
  command: index
  method: "GET"
- module: opnsense
  controller: rip
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: export
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: maintenance
  command: index
  method: "GET"
- module: opnsense
  controller: statistics
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: clients
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: realms
  command: index
  method: "GET"
- module: opnsense
  controller: rewrites
  command: index
  method: "GET"
- module: opnsense
  controller: servers
  command: index
  method: "GET"
- module: opnsense
  controller: tls
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: status
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: local
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: settings
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: overview
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: input
  command: index
  method: "GET"
- module: opnsense
  controller: output
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: accounts
  command: index
  method: "GET"
- module: opnsense
  controller: actions
  command: index
  method: "GET"
- module: opnsense
  controller: certificates
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: logs
  command: index
  method: "GET"
- module: opnsense
  controller: validations
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: overview
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: sensor
  command: index
  method: "GET"
- module: opnsense
  controller: server
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: services
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: diagnostics
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: info
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: status
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: diagnostics
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: general
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: ban
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: opnsense
  controller: index
  command: tlsHandshakes
  method: "GET"
- module: opnsense
  controller: index
  command: vts
  method: "GET"
- module: opnsense
  controller: logs
  command: accesses
  method: "GET"
- module: opnsense
  controller: logs
  command: errors
  method: "GET"
- module: opnsense
  controller: logs
  command: index
  method: "GET"
- module: opnsense
  controller: logs
  command: streamaccesses
  method: "GET"
- module: opnsense
  controller: logs
  command: streamerrors
  method: "GET"
- module: opnsense
  controller: index
  command: index
  method: "GET"
- module: udpbroadcastrelay
  controller: service
  command: config
  method: "POST"
- module: udpbroadcastrelay
  controller: service
  command: get
  method: "GET"
- module: udpbroadcastrelay
  controller: service
  command: reload
  method: "POST"
- module: udpbroadcastrelay
  controller: service
  command: restart
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: service
  command: set
  method: "POST"
- module: udpbroadcastrelay
  controller: service
  command: start
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: service
  command: status
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: service
  command: stop
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: settings
  command: addRelay
  method: "POST"
- module: udpbroadcastrelay
  controller: settings
  command: delRelay
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: settings
  command: get
  method: "GET"
- module: udpbroadcastrelay
  controller: settings
  command: getRelay
  method: "GET"
  parameters:
    - $uuid=null
- module: udpbroadcastrelay
  controller: settings
  command: searchRelay
  method: "GET"
- module: udpbroadcastrelay
  controller: settings
  command: set
  method: "POST"
- module: udpbroadcastrelay
  controller: settings
  command: setRelay
  method: "POST"
  parameters:
    - $uuid
- module: udpbroadcastrelay
  controller: settings
  command: toggleRelay
  method: "POST"
  parameters:
    - $uuid
- module: maltrail
  controller: general
  command: get
  method: "GET"
- module: maltrail
  controller: general
  command: set
  method: "POST"
- module: maltrail
  controller: sensor
  command: get
  method: "GET"
- module: maltrail
  controller: sensor
  command: set
  method: "POST"
- module: maltrail
  controller: server
  command: get
  method: "GET"
- module: maltrail
  controller: server
  command: set
  method: "POST"
- module: maltrail
  controller: serverservice
  command: reconfigure
  method: "POST"
- module: maltrail
  controller: serverservice
  command: restart
  method: "POST"
- module: maltrail
  controller: serverservice
  command: start
  method: "POST"
- module: maltrail
  controller: serverservice
  command: status
  method: "GET"
- module: maltrail
  controller: serverservice
  command: stop
  method: "POST"
- module: maltrail
  controller: service
  command: reconfigure
  method: "POST"
- module: maltrail
  controller: service
  command: restart
  method: "POST"
- module: maltrail
  controller: service
  command: start
  method: "POST"
- module: maltrail
  controller: service
  command: status
  method: "GET"
- module: maltrail
  controller: service
  command: stop
  method: "POST"
- module: tinc
  controller: service
  command: reconfigure
  method: "POST"
- module: tinc
  controller: service
  command: restart
  method: "POST"
- module: tinc
  controller: service
  command: start
  method: "POST"
- module: tinc
  controller: service
  command: stop
  method: "POST"
- module: tinc
  controller: settings
  command: delHost
  method: "POST"
  parameters:
    - $uuid
- module: tinc
  controller: settings
  command: delNetwork
  method: "POST"
  parameters:
    - $uuid
- module: tinc
  controller: settings
  command: get
  method: "GET"
- module: tinc
  controller: settings
  command: getHost
  method: "GET"
  parameters:
    - $uuid=null
- module: tinc
  controller: settings
  command: getNetwork
  method: "GET"
  parameters:
    - $uuid=null
- module: tinc
  controller: settings
  command: searchHost
  method: "GET"
- module: tinc
  controller: settings
  command: searchNetwork
  method: "GET"
- module: tinc
  controller: settings
  command: set
  method: "POST"
- module: tinc
  controller: settings
  command: setHost
  method: "POST"
  parameters:
    - $uuid=null
- module: tinc
  controller: settings
  command: setNetwork
  method: "POST"
  parameters:
    - $uuid=null
- module: tinc
  controller: settings
  command: toggleHost
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: tinc
  controller: settings
  command: toggleNetwork
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: hwprobe
  controller: general
  command: get
  method: "GET"
- module: hwprobe
  controller: general
  command: set
  method: "POST"
- module: hwprobe
  controller: service
  command: reconfigure
  method: "POST"
- module: hwprobe
  controller: service
  command: report
  method: "GET"
- module: hwprobe
  controller: service
  command: restart
  method: "POST"
- module: hwprobe
  controller: service
  command: start
  method: "POST"
- module: hwprobe
  controller: service
  command: status
  method: "GET"
- module: hwprobe
  controller: service
  command: stop
  method: "POST"
- module: captiveportal
  controller: access
  command: logoff
  method: "GET"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: access
  command: logon
  method: "POST"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: access
  command: status
  method: "POST"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: service
  command: delTemplate
  method: "POST"
  parameters:
    - $uuid
- module: captiveportal
  controller: service
  command: getTemplate
  method: "GET"
  parameters:
    - $fileid=null
- module: captiveportal
  controller: service
  command: reconfigure
  method: "POST"
- module: captiveportal
  controller: service
  command: saveTemplate
  method: "POST"
- module: captiveportal
  controller: service
  command: searchTemplates
  method: "GET"
- module: captiveportal
  controller: session
  command: connect
  method: "POST"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: session
  command: disconnect
  method: "POST"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: session
  command: list
  method: "GET"
  parameters:
    - $zoneid=0
- module: captiveportal
  controller: session
  command: zones
  method: "GET"
- module: captiveportal
  controller: settings
  command: addZone
  method: "POST"
- module: captiveportal
  controller: settings
  command: delZone
  method: "POST"
  parameters:
    - $uuid
- module: captiveportal
  controller: settings
  command: get
  method: "GET"
- module: captiveportal
  controller: settings
  command: getZone
  method: "GET"
  parameters:
    - $uuid=null
- module: captiveportal
  controller: settings
  command: searchZones
  method: "GET"
- module: captiveportal
  controller: settings
  command: set
  method: "POST"
- module: captiveportal
  controller: settings
  command: setZone
  method: "POST"
  parameters:
    - $uuid
- module: captiveportal
  controller: settings
  command: toggleZone
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: captiveportal
  controller: voucher
  command: dropExpiredVouchers
  method: "POST"
  parameters:
    - $provider
    - $group
- module: captiveportal
  controller: voucher
  command: dropVoucherGroup
  method: "POST"
  parameters:
    - $provider
    - $group
- module: captiveportal
  controller: voucher
  command: expireVoucher
  method: "POST"
  parameters:
    - $provider
- module: captiveportal
  controller: voucher
  command: generateVouchers
  method: "POST"
  parameters:
    - $provider
- module: captiveportal
  controller: voucher
  command: listProviders
  method: "GET"
- module: captiveportal
  controller: voucher
  command: listVoucherGroups
  method: "GET"
  parameters:
    - $provider
- module: captiveportal
  controller: voucher
  command: listVouchers
  method: "GET"
  parameters:
    - $provider
    - $group
- module: ids
  controller: service
  command: dropAlertLog
  method: "POST"
- module: ids
  controller: service
  command: getAlertInfo
  method: "GET"
  parameters:
    - $alertId
    - $fileid=""
- module: ids
  controller: service
  command: getAlertLogs
  method: "GET"
- module: ids
  controller: service
  command: queryAlerts
  method: "POST"
- module: ids
  controller: service
  command: reconfigure
  method: "POST"
- module: ids
  controller: service
  command: reloadRules
  method: "POST"
- module: ids
  controller: service
  command: restart
  method: "POST"
- module: ids
  controller: service
  command: start
  method: "POST"
- module: ids
  controller: service
  command: status
  method: "GET"
- module: ids
  controller: service
  command: stop
  method: "POST"
- module: ids
  controller: service
  command: updateRules
  method: "POST"
  parameters:
    - $wait=null
- module: ids
  controller: settings
  command: addPolicy
  method: "POST"
- module: ids
  controller: settings
  command: addPolicyRule
  method: "POST"
- module: ids
  controller: settings
  command: addUserRule
  method: "POST"
- module: ids
  controller: settings
  command: checkPolicyRule
  method: "GET"
- module: ids
  controller: settings
  command: delPolicy
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: delPolicyRule
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: delUserRule
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: get
  method: "GET"
- module: ids
  controller: settings
  command: getPolicy
  method: "GET"
  parameters:
    - $uuid=null
- module: ids
  controller: settings
  command: getPolicyRule
  method: "GET"
  parameters:
    - $uuid=null
- module: ids
  controller: settings
  command: getRuleInfo
  method: "GET"
  parameters:
    - $sid=null
- module: ids
  controller: settings
  command: getRuleset
  method: "GET"
  parameters:
    - $id
- module: ids
  controller: settings
  command: getRulesetproperties
  method: "GET"
- module: ids
  controller: settings
  command: getUserRule
  method: "GET"
  parameters:
    - $uuid=null
- module: ids
  controller: settings
  command: listRuleMetadata
  method: "GET"
- module: ids
  controller: settings
  command: listRulesets
  method: "GET"
- module: ids
  controller: settings
  command: searchInstalledRules
  method: "POST"
- module: ids
  controller: settings
  command: searchPolicy
  method: "GET"
- module: ids
  controller: settings
  command: searchPolicyRule
  method: "GET"
- module: ids
  controller: settings
  command: searchUserRule
  method: "GET"
- module: ids
  controller: settings
  command: set
  method: "POST"
- module: ids
  controller: settings
  command: setPolicy
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: setPolicyRule
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: setRule
  method: "POST"
  parameters:
    - $sid
- module: ids
  controller: settings
  command: setRuleset
  method: "POST"
  parameters:
    - $filename
- module: ids
  controller: settings
  command: setRulesetproperties
  method: "POST"
- module: ids
  controller: settings
  command: setUserRule
  method: "POST"
  parameters:
    - $uuid
- module: ids
  controller: settings
  command: togglePolicy
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ids
  controller: settings
  command: togglePolicyRule
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ids
  controller: settings
  command: toggleRule
  method: "POST"
  parameters:
    - $sids
    - $enabled=null
- module: ids
  controller: settings
  command: toggleRuleset
  method: "POST"
  parameters:
    - $filenames
    - $enabled=null
- module: ids
  controller: settings
  command: toggleUserRule
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: freeradius
  controller: avpair
  command: addAvpair
  method: "POST"
- module: freeradius
  controller: avpair
  command: delAvpair
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: avpair
  command: get
  method: "GET"
- module: freeradius
  controller: avpair
  command: getAvpair
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: avpair
  command: searchAvpair
  method: "GET"
- module: freeradius
  controller: avpair
  command: set
  method: "POST"
- module: freeradius
  controller: avpair
  command: setAvpair
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: avpair
  command: toggleAvpair
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: client
  command: addClient
  method: "POST"
- module: freeradius
  controller: client
  command: delClient
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: client
  command: get
  method: "GET"
- module: freeradius
  controller: client
  command: getClient
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: client
  command: searchClient
  method: "GET"
- module: freeradius
  controller: client
  command: set
  method: "POST"
- module: freeradius
  controller: client
  command: setClient
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: client
  command: toggleClient
  method: "GET"
  parameters:
    - $uuid
- module: freeradius
  controller: dhcp
  command: addDhcp
  method: "POST"
- module: freeradius
  controller: dhcp
  command: delDhcp
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: dhcp
  command: get
  method: "GET"
- module: freeradius
  controller: dhcp
  command: getDhcp
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: dhcp
  command: searchDhcp
  method: "GET"
- module: freeradius
  controller: dhcp
  command: set
  method: "POST"
- module: freeradius
  controller: dhcp
  command: setDhcp
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: dhcp
  command: toggleDhcp
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: eap
  command: get
  method: "GET"
- module: freeradius
  controller: eap
  command: set
  method: "POST"
- module: freeradius
  controller: general
  command: get
  method: "GET"
- module: freeradius
  controller: general
  command: set
  method: "POST"
- module: freeradius
  controller: ldap
  command: get
  method: "GET"
- module: freeradius
  controller: ldap
  command: set
  method: "POST"
- module: freeradius
  controller: lease
  command: addLease
  method: "POST"
- module: freeradius
  controller: lease
  command: delLease
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: lease
  command: get
  method: "GET"
- module: freeradius
  controller: lease
  command: getLease
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: lease
  command: searchLease
  method: "GET"
- module: freeradius
  controller: lease
  command: set
  method: "POST"
- module: freeradius
  controller: lease
  command: setLease
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: lease
  command: toggleLease
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: addHomeserver
  method: "POST"
- module: freeradius
  controller: proxy
  command: addHomeserverpool
  method: "POST"
- module: freeradius
  controller: proxy
  command: addRealm
  method: "POST"
- module: freeradius
  controller: proxy
  command: delHomeserver
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: delHomeserverpool
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: delRealm
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: get
  method: "GET"
- module: freeradius
  controller: proxy
  command: getHomeserver
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: proxy
  command: getHomeserverpool
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: proxy
  command: getRealm
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: proxy
  command: searchHomeserver
  method: "GET"
- module: freeradius
  controller: proxy
  command: searchHomeserverpool
  method: "GET"
- module: freeradius
  controller: proxy
  command: searchRealm
  method: "GET"
- module: freeradius
  controller: proxy
  command: set
  method: "POST"
- module: freeradius
  controller: proxy
  command: setHomeserver
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: setHomeserverpool
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: setRealm
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: toggleHomeserver
  method: "GET"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: toggleHomeserverpool
  method: "GET"
  parameters:
    - $uuid
- module: freeradius
  controller: proxy
  command: toggleRealm
  method: "GET"
  parameters:
    - $uuid
- module: freeradius
  controller: service
  command: reconfigure
  method: "POST"
- module: freeradius
  controller: service
  command: restart
  method: "POST"
- module: freeradius
  controller: service
  command: start
  method: "POST"
- module: freeradius
  controller: service
  command: status
  method: "GET"
- module: freeradius
  controller: service
  command: stop
  method: "POST"
- module: freeradius
  controller: user
  command: addUser
  method: "POST"
- module: freeradius
  controller: user
  command: delUser
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: user
  command: get
  method: "GET"
- module: freeradius
  controller: user
  command: getUser
  method: "GET"
  parameters:
    - $uuid=null
- module: freeradius
  controller: user
  command: searchUser
  method: "GET"
- module: freeradius
  controller: user
  command: set
  method: "POST"
- module: freeradius
  controller: user
  command: setUser
  method: "POST"
  parameters:
    - $uuid
- module: freeradius
  controller: user
  command: toggleUser
  method: "GET"
  parameters:
    - $uuid
- module: telegraf
  controller: general
  command: get
  method: "GET"
- module: telegraf
  controller: general
  command: set
  method: "POST"
- module: telegraf
  controller: input
  command: get
  method: "GET"
- module: telegraf
  controller: input
  command: set
  method: "POST"
- module: telegraf
  controller: key
  command: addKey
  method: "POST"
- module: telegraf
  controller: key
  command: delKey
  method: "POST"
  parameters:
    - $uuid
- module: telegraf
  controller: key
  command: get
  method: "GET"
- module: telegraf
  controller: key
  command: getKey
  method: "GET"
  parameters:
    - $uuid=null
- module: telegraf
  controller: key
  command: searchKey
  method: "GET"
- module: telegraf
  controller: key
  command: set
  method: "POST"
- module: telegraf
  controller: key
  command: setKey
  method: "POST"
  parameters:
    - $uuid
- module: telegraf
  controller: key
  command: toggleKey
  method: "POST"
  parameters:
    - $uuid
- module: telegraf
  controller: output
  command: get
  method: "GET"
- module: telegraf
  controller: output
  command: set
  method: "POST"
- module: telegraf
  controller: service
  command: reconfigure
  method: "POST"
- module: telegraf
  controller: service
  command: restart
  method: "POST"
- module: telegraf
  controller: service
  command: start
  method: "POST"
- module: telegraf
  controller: service
  command: status
  method: "GET"
- module: telegraf
  controller: service
  command: stop
  method: "POST"
- module: redis
  controller: service
  command: reconfigure
  method: "POST"
- module: redis
  controller: service
  command: resetdb
  method: "GET"
- module: redis
  controller: service
  command: restart
  method: "POST"
- module: redis
  controller: service
  command: start
  method: "POST"
- module: redis
  controller: service
  command: status
  method: "GET"
- module: redis
  controller: service
  command: stop
  method: "POST"
- module: redis
  controller: settings
  command: get
  method: "GET"
- module: redis
  controller: settings
  command: set
  method: "POST"
- module: dyndns
  controller: accounts
  command: addItem
  method: "POST"
- module: dyndns
  controller: accounts
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: dyndns
  controller: accounts
  command: get
  method: "GET"
- module: dyndns
  controller: accounts
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: dyndns
  controller: accounts
  command: searchItem
  method: "GET"
- module: dyndns
  controller: accounts
  command: set
  method: "POST"
- module: dyndns
  controller: accounts
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: dyndns
  controller: accounts
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: dyndns
  controller: service
  command: reconfigure
  method: "POST"
- module: dyndns
  controller: service
  command: restart
  method: "POST"
- module: dyndns
  controller: service
  command: start
  method: "POST"
- module: dyndns
  controller: service
  command: status
  method: "GET"
- module: dyndns
  controller: service
  command: stop
  method: "POST"
- module: dyndns
  controller: settings
  command: get
  method: "GET"
- module: dyndns
  controller: settings
  command: set
  method: "POST"
- module: postfix
  controller: address
  command: addAddress
  method: "POST"
- module: postfix
  controller: address
  command: delAddress
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: address
  command: get
  method: "GET"
- module: postfix
  controller: address
  command: getAddress
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: address
  command: searchAddress
  method: "GET"
- module: postfix
  controller: address
  command: set
  method: "POST"
- module: postfix
  controller: address
  command: setAddress
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: address
  command: toggleAddress
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: antispam
  command: get
  method: "GET"
- module: postfix
  controller: antispam
  command: set
  method: "POST"
- module: postfix
  controller: domain
  command: addDomain
  method: "POST"
- module: postfix
  controller: domain
  command: delDomain
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: domain
  command: get
  method: "GET"
- module: postfix
  controller: domain
  command: getDomain
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: domain
  command: searchDomain
  method: "GET"
- module: postfix
  controller: domain
  command: set
  method: "POST"
- module: postfix
  controller: domain
  command: setDomain
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: domain
  command: toggleDomain
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: general
  command: get
  method: "GET"
- module: postfix
  controller: general
  command: set
  method: "POST"
- module: postfix
  controller: headerchecks
  command: addHeadercheck
  method: "POST"
- module: postfix
  controller: headerchecks
  command: delHeadercheck
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: headerchecks
  command: get
  method: "GET"
- module: postfix
  controller: headerchecks
  command: getHeadercheck
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: headerchecks
  command: searchHeaderchecks
  method: "GET"
- module: postfix
  controller: headerchecks
  command: set
  method: "POST"
- module: postfix
  controller: headerchecks
  command: setHeadercheck
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: headerchecks
  command: toggleHeadercheck
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipient
  command: addRecipient
  method: "POST"
- module: postfix
  controller: recipient
  command: delRecipient
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipient
  command: get
  method: "GET"
- module: postfix
  controller: recipient
  command: getRecipient
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: recipient
  command: searchRecipient
  method: "GET"
- module: postfix
  controller: recipient
  command: set
  method: "POST"
- module: postfix
  controller: recipient
  command: setRecipient
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipient
  command: toggleRecipient
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipientbcc
  command: addRecipientbcc
  method: "POST"
- module: postfix
  controller: recipientbcc
  command: delRecipientbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipientbcc
  command: get
  method: "GET"
- module: postfix
  controller: recipientbcc
  command: getRecipientbcc
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: recipientbcc
  command: searchRecipientbcc
  method: "GET"
- module: postfix
  controller: recipientbcc
  command: set
  method: "POST"
- module: postfix
  controller: recipientbcc
  command: setRecipientbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: recipientbcc
  command: toggleRecipientbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sender
  command: addSender
  method: "POST"
- module: postfix
  controller: sender
  command: delSender
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sender
  command: get
  method: "GET"
- module: postfix
  controller: sender
  command: getSender
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: sender
  command: searchSender
  method: "GET"
- module: postfix
  controller: sender
  command: set
  method: "POST"
- module: postfix
  controller: sender
  command: setSender
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sender
  command: toggleSender
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: senderbcc
  command: addSenderbcc
  method: "POST"
- module: postfix
  controller: senderbcc
  command: delSenderbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: senderbcc
  command: get
  method: "GET"
- module: postfix
  controller: senderbcc
  command: getSenderbcc
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: senderbcc
  command: searchSenderbcc
  method: "GET"
- module: postfix
  controller: senderbcc
  command: set
  method: "POST"
- module: postfix
  controller: senderbcc
  command: setSenderbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: senderbcc
  command: toggleSenderbcc
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sendercanonical
  command: addSendercanonical
  method: "POST"
- module: postfix
  controller: sendercanonical
  command: delSendercanonical
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sendercanonical
  command: get
  method: "GET"
- module: postfix
  controller: sendercanonical
  command: getSendercanonical
  method: "GET"
  parameters:
    - $uuid=null
- module: postfix
  controller: sendercanonical
  command: searchSendercanonical
  method: "GET"
- module: postfix
  controller: sendercanonical
  command: set
  method: "POST"
- module: postfix
  controller: sendercanonical
  command: setSendercanonical
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: sendercanonical
  command: toggleSendercanonical
  method: "POST"
  parameters:
    - $uuid
- module: postfix
  controller: service
  command: checkrspamd
  method: "GET"
- module: postfix
  controller: service
  command: reconfigure
  method: "POST"
- module: postfix
  controller: service
  command: restart
  method: "POST"
- module: postfix
  controller: service
  command: start
  method: "POST"
- module: postfix
  controller: service
  command: status
  method: "GET"
- module: postfix
  controller: service
  command: stop
  method: "POST"
- module: openconnect
  controller: general
  command: get
  method: "GET"
- module: openconnect
  controller: general
  command: set
  method: "POST"
- module: openconnect
  controller: service
  command: reconfigure
  method: "POST"
- module: openconnect
  controller: service
  command: restart
  method: "POST"
- module: openconnect
  controller: service
  command: start
  method: "POST"
- module: openconnect
  controller: service
  command: status
  method: "GET"
- module: openconnect
  controller: service
  command: stop
  method: "POST"
- module: backup
  controller: backup
  command: download
  method: "GET"
  parameters:
    - $format='plain'
- module: wireguard
  controller: client
  command: addClient
  method: "POST"
- module: wireguard
  controller: client
  command: delClient
  method: "POST"
  parameters:
    - $uuid
- module: wireguard
  controller: client
  command: get
  method: "GET"
- module: wireguard
  controller: client
  command: getClient
  method: "GET"
  parameters:
    - $uuid=null
- module: wireguard
  controller: client
  command: searchClient
  method: "GET"
- module: wireguard
  controller: client
  command: set
  method: "POST"
- module: wireguard
  controller: client
  command: setClient
  method: "POST"
  parameters:
    - $uuid
- module: wireguard
  controller: client
  command: toggleClient
  method: "POST"
  parameters:
    - $uuid
- module: wireguard
  controller: general
  command: get
  method: "GET"
- module: wireguard
  controller: general
  command: getStatus
  method: "GET"
- module: wireguard
  controller: general
  command: set
  method: "POST"
- module: wireguard
  controller: server
  command: addServer
  method: "POST"
  parameters:
    - $uuid=null
- module: wireguard
  controller: server
  command: delServer
  method: "POST"
  parameters:
    - $uuid
- module: wireguard
  controller: server
  command: get
  method: "GET"
- module: wireguard
  controller: server
  command: getServer
  method: "GET"
  parameters:
    - $uuid=null
- module: wireguard
  controller: server
  command: searchServer
  method: "GET"
- module: wireguard
  controller: server
  command: set
  method: "POST"
- module: wireguard
  controller: server
  command: setServer
  method: "POST"
  parameters:
    - $uuid=null
- module: wireguard
  controller: server
  command: toggleServer
  method: "POST"
  parameters:
    - $uuid
- module: wireguard
  controller: service
  command: reconfigure
  method: "POST"
- module: wireguard
  controller: service
  command: restart
  method: "POST"
- module: wireguard
  controller: service
  command: showconf
  method: "GET"
- module: wireguard
  controller: service
  command: showhandshake
  method: "GET"
- module: wireguard
  controller: service
  command: start
  method: "POST"
- module: wireguard
  controller: service
  command: status
  method: "GET"
- module: wireguard
  controller: service
  command: stop
  method: "POST"
- module: zabbixproxy
  controller: general
  command: get
  method: "GET"
- module: zabbixproxy
  controller: general
  command: set
  method: "POST"
- module: zabbixproxy
  controller: service
  command: reconfigure
  method: "POST"
- module: zabbixproxy
  controller: service
  command: restart
  method: "POST"
- module: zabbixproxy
  controller: service
  command: start
  method: "POST"
- module: zabbixproxy
  controller: service
  command: status
  method: "GET"
- module: zabbixproxy
  controller: service
  command: stop
  method: "POST"
- module: cron
  controller: service
  command: reconfigure
  method: "POST"
- module: cron
  controller: settings
  command: addJob
  method: "POST"
- module: cron
  controller: settings
  command: delJob
  method: "POST"
  parameters:
    - $uuid
- module: cron
  controller: settings
  command: get
  method: "GET"
- module: cron
  controller: settings
  command: getJob
  method: "GET"
  parameters:
    - $uuid=null
- module: cron
  controller: settings
  command: searchJobs
  method: "GET"
- module: cron
  controller: settings
  command: set
  method: "POST"
- module: cron
  controller: settings
  command: setJob
  method: "POST"
  parameters:
    - $uuid
- module: cron
  controller: settings
  command: toggleJob
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: dhcpv4
  controller: leases
  command: delLease
  method: "POST"
  parameters:
    - $ip
- module: dhcpv4
  controller: leases
  command: searchLease
  method: "GET"
- module: dhcpv4
  controller: service
  command: reconfigure
  method: "POST"
- module: dhcpv4
  controller: service
  command: restart
  method: "POST"
- module: dhcpv4
  controller: service
  command: start
  method: "POST"
- module: dhcpv4
  controller: service
  command: status
  method: "GET"
- module: dhcpv4
  controller: service
  command: stop
  method: "POST"
- module: monit
  controller: service
  command: check
  method: "POST"
- module: monit
  controller: service
  command: reconfigure
  method: "POST"
- module: monit
  controller: service
  command: restart
  method: "POST"
- module: monit
  controller: service
  command: start
  method: "POST"
- module: monit
  controller: service
  command: status
  method: "GET"
- module: monit
  controller: service
  command: stop
  method: "POST"
- module: monit
  controller: settings
  command: addAlert
  method: "POST"
- module: monit
  controller: settings
  command: addService
  method: "POST"
- module: monit
  controller: settings
  command: addTest
  method: "POST"
- module: monit
  controller: settings
  command: delAlert
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: delService
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: delTest
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: dirty
  method: "GET"
- module: monit
  controller: settings
  command: get
  method: "GET"
- module: monit
  controller: settings
  command: getAlert
  method: "GET"
  parameters:
    - $uuid=null
- module: monit
  controller: settings
  command: getGeneral
  method: "GET"
- module: monit
  controller: settings
  command: getService
  method: "GET"
  parameters:
    - $uuid=null
- module: monit
  controller: settings
  command: getTest
  method: "GET"
  parameters:
    - $uuid=null
- module: monit
  controller: settings
  command: searchAlert
  method: "GET"
- module: monit
  controller: settings
  command: searchService
  method: "GET"
- module: monit
  controller: settings
  command: searchTest
  method: "GET"
- module: monit
  controller: settings
  command: set
  method: "POST"
- module: monit
  controller: settings
  command: setAlert
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: setService
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: setTest
  method: "POST"
  parameters:
    - $uuid
- module: monit
  controller: settings
  command: toggleAlert
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: monit
  controller: settings
  command: toggleService
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: monit
  controller: status
  command: get
  method: "GET"
  parameters:
    - $format='xml'
- module: helloworld
  controller: service
  command: reload
  method: "POST"
- module: helloworld
  controller: service
  command: test
  method: "POST"
- module: helloworld
  controller: settings
  command: get
  method: "GET"
- module: helloworld
  controller: settings
  command: set
  method: "POST"
- module: helloworld
  controller: simplified_settings
  command: get
  method: "GET"
- module: helloworld
  controller: simplified_settings
  command: set
  method: "POST"
- module: tftp
  controller: general
  command: get
  method: "GET"
- module: tftp
  controller: general
  command: set
  method: "POST"
- module: tftp
  controller: service
  command: reconfigure
  method: "POST"
- module: tftp
  controller: service
  command: restart
  method: "POST"
- module: tftp
  controller: service
  command: start
  method: "POST"
- module: tftp
  controller: service
  command: status
  method: "GET"
- module: tftp
  controller: service
  command: stop
  method: "POST"
- module: siproxd
  controller: domain
  command: addDomain
  method: "POST"
- module: siproxd
  controller: domain
  command: delDomain
  method: "POST"
  parameters:
    - $uuid
- module: siproxd
  controller: domain
  command: get
  method: "GET"
- module: siproxd
  controller: domain
  command: getDomain
  method: "GET"
  parameters:
    - $uuid=null
- module: siproxd
  controller: domain
  command: searchDomain
  method: "GET"
- module: siproxd
  controller: domain
  command: set
  method: "POST"
- module: siproxd
  controller: domain
  command: setDomain
  method: "POST"
  parameters:
    - $uuid
- module: siproxd
  controller: domain
  command: toggleDomain
  method: "GET"
  parameters:
    - $uuid
- module: siproxd
  controller: general
  command: get
  method: "GET"
- module: siproxd
  controller: general
  command: set
  method: "POST"
- module: siproxd
  controller: service
  command: reconfigure
  method: "POST"
- module: siproxd
  controller: service
  command: restart
  method: "POST"
- module: siproxd
  controller: service
  command: showregistrations
  method: "GET"
- module: siproxd
  controller: service
  command: start
  method: "POST"
- module: siproxd
  controller: service
  command: status
  method: "GET"
- module: siproxd
  controller: service
  command: stop
  method: "POST"
- module: siproxd
  controller: user
  command: addUser
  method: "POST"
- module: siproxd
  controller: user
  command: delUser
  method: "POST"
  parameters:
    - $uuid
- module: siproxd
  controller: user
  command: get
  method: "GET"
- module: siproxd
  controller: user
  command: getUser
  method: "GET"
  parameters:
    - $uuid=null
- module: siproxd
  controller: user
  command: searchUser
  method: "GET"
- module: siproxd
  controller: user
  command: set
  method: "POST"
- module: siproxd
  controller: user
  command: setUser
  method: "POST"
  parameters:
    - $uuid
- module: siproxd
  controller: user
  command: toggleUser
  method: "GET"
  parameters:
    - $uuid
- module: clamav
  controller: general
  command: get
  method: "GET"
- module: clamav
  controller: general
  command: set
  method: "POST"
- module: clamav
  controller: service
  command: freshclam
  method: "POST"
- module: clamav
  controller: service
  command: reconfigure
  method: "POST"
- module: clamav
  controller: service
  command: restart
  method: "POST"
- module: clamav
  controller: service
  command: start
  method: "POST"
- module: clamav
  controller: service
  command: status
  method: "GET"
- module: clamav
  controller: service
  command: stop
  method: "POST"
- module: clamav
  controller: service
  command: version
  method: "GET"
- module: clamav
  controller: url
  command: addUrl
  method: "POST"
- module: clamav
  controller: url
  command: delUrl
  method: "POST"
  parameters:
    - $uuid
- module: clamav
  controller: url
  command: get
  method: "GET"
- module: clamav
  controller: url
  command: getUrl
  method: "GET"
  parameters:
    - $uuid=null
- module: clamav
  controller: url
  command: searchUrl
  method: "GET"
- module: clamav
  controller: url
  command: set
  method: "POST"
- module: clamav
  controller: url
  command: setUrl
  method: "POST"
  parameters:
    - $uuid
- module: clamav
  controller: url
  command: toggleUrl
  method: "POST"
  parameters:
    - $uuid
- module: nodeexporter
  controller: general
  command: get
  method: "GET"
- module: nodeexporter
  controller: general
  command: set
  method: "POST"
- module: nodeexporter
  controller: service
  command: reconfigure
  method: "POST"
- module: nodeexporter
  controller: service
  command: restart
  method: "POST"
- module: nodeexporter
  controller: service
  command: start
  method: "POST"
- module: nodeexporter
  controller: service
  command: status
  method: "GET"
- module: nodeexporter
  controller: service
  command: stop
  method: "POST"
- module: rspamd
  controller: service
  command: reconfigure
  method: "POST"
- module: rspamd
  controller: service
  command: restart
  method: "POST"
- module: rspamd
  controller: service
  command: start
  method: "POST"
- module: rspamd
  controller: service
  command: status
  method: "GET"
- module: rspamd
  controller: service
  command: stop
  method: "POST"
- module: rspamd
  controller: settings
  command: get
  method: "GET"
- module: rspamd
  controller: settings
  command: set
  method: "POST"
- module: quagga
  controller: bfd
  command: addNeighbor
  method: "POST"
- module: quagga
  controller: bfd
  command: delNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bfd
  command: get
  method: "GET"
- module: quagga
  controller: bfd
  command: getNeighbor
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bfd
  command: searchNeighbor
  method: "GET"
- module: quagga
  controller: bfd
  command: set
  method: "POST"
- module: quagga
  controller: bfd
  command: setNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bfd
  command: toggleNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: addAspath
  method: "POST"
- module: quagga
  controller: bgp
  command: addCommunitylist
  method: "POST"
- module: quagga
  controller: bgp
  command: addNeighbor
  method: "POST"
- module: quagga
  controller: bgp
  command: addPrefixlist
  method: "POST"
- module: quagga
  controller: bgp
  command: addRoutemap
  method: "POST"
- module: quagga
  controller: bgp
  command: delAspath
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: delCommunitylist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: delNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: delPrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: delRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: get
  method: "GET"
- module: quagga
  controller: bgp
  command: getAspath
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bgp
  command: getCommunitylist
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bgp
  command: getNeighbor
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bgp
  command: getPrefixlist
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bgp
  command: getRoutemap
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: bgp
  command: searchAspath
  method: "GET"
- module: quagga
  controller: bgp
  command: searchCommunitylist
  method: "GET"
- module: quagga
  controller: bgp
  command: searchNeighbor
  method: "GET"
- module: quagga
  controller: bgp
  command: searchPrefixlist
  method: "GET"
- module: quagga
  controller: bgp
  command: searchRoutemap
  method: "GET"
- module: quagga
  controller: bgp
  command: set
  method: "POST"
- module: quagga
  controller: bgp
  command: setAspath
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: setCommunitylist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: setNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: setPrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: setRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: toggleAspath
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: toggleCommunitylist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: toggleNeighbor
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: togglePrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: bgp
  command: toggleRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: diagnostics
  command: bfdcounters
  method: "GET"
- module: quagga
  controller: diagnostics
  command: bfdneighbors
  method: "GET"
- module: quagga
  controller: diagnostics
  command: bfdsummary
  method: "GET"
- module: quagga
  controller: diagnostics
  command: bgpneighbors
  method: "GET"
- module: quagga
  controller: diagnostics
  command: bgpsummary
  method: "GET"
- module: quagga
  controller: diagnostics
  command: generalrunningconfig
  method: "GET"
- module: quagga
  controller: diagnostics
  command: ospfdatabase
  method: "GET"
- module: quagga
  controller: diagnostics
  command: ospfinterface
  method: "GET"
- module: quagga
  controller: diagnostics
  command: ospfoverview
  method: "GET"
- module: quagga
  controller: diagnostics
  command: ospfv3interface
  method: "GET"
- module: quagga
  controller: diagnostics
  command: ospfv3overview
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchBgproute4
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchBgproute6
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchGeneralroute4
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchGeneralroute6
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchOspfneighbor
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchOspfroute
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchOspfv3database
  method: "GET"
- module: quagga
  controller: diagnostics
  command: searchOspfv3route
  method: "GET"
  parameters:
    - $format="json"
- module: quagga
  controller: general
  command: get
  method: "GET"
- module: quagga
  controller: general
  command: set
  method: "POST"
- module: quagga
  controller: ospf6settings
  command: addInterface
  method: "POST"
- module: quagga
  controller: ospf6settings
  command: delInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospf6settings
  command: get
  method: "GET"
- module: quagga
  controller: ospf6settings
  command: getInterface
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: ospf6settings
  command: searchInterface
  method: "GET"
- module: quagga
  controller: ospf6settings
  command: set
  method: "POST"
- module: quagga
  controller: ospf6settings
  command: setInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospf6settings
  command: toggleInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: addInterface
  method: "POST"
- module: quagga
  controller: ospfsettings
  command: addNetwork
  method: "POST"
- module: quagga
  controller: ospfsettings
  command: addPrefixlist
  method: "POST"
- module: quagga
  controller: ospfsettings
  command: addRoutemap
  method: "POST"
- module: quagga
  controller: ospfsettings
  command: delInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: delNetwork
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: delPrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: delRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: get
  method: "GET"
- module: quagga
  controller: ospfsettings
  command: getInterface
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: ospfsettings
  command: getNetwork
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: ospfsettings
  command: getPrefixlist
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: ospfsettings
  command: getRoutemap
  method: "GET"
  parameters:
    - $uuid=null
- module: quagga
  controller: ospfsettings
  command: searchInterface
  method: "GET"
- module: quagga
  controller: ospfsettings
  command: searchNetwork
  method: "GET"
- module: quagga
  controller: ospfsettings
  command: searchPrefixlist
  method: "GET"
- module: quagga
  controller: ospfsettings
  command: searchRoutemap
  method: "GET"
- module: quagga
  controller: ospfsettings
  command: set
  method: "POST"
- module: quagga
  controller: ospfsettings
  command: setInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: setNetwork
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: setPrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: setRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: toggleInterface
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: toggleNetwork
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: togglePrefixlist
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: ospfsettings
  command: toggleRoutemap
  method: "POST"
  parameters:
    - $uuid
- module: quagga
  controller: rip
  command: get
  method: "GET"
- module: quagga
  controller: rip
  command: set
  method: "POST"
- module: quagga
  controller: service
  command: reconfigure
  method: "POST"
- module: quagga
  controller: service
  command: restart
  method: "POST"
- module: quagga
  controller: service
  command: start
  method: "POST"
- module: quagga
  controller: service
  command: status
  method: "GET"
- module: quagga
  controller: service
  command: stop
  method: "POST"
- module: zabbixagent
  controller: service
  command: reconfigure
  method: "POST"
- module: zabbixagent
  controller: service
  command: restart
  method: "POST"
- module: zabbixagent
  controller: service
  command: start
  method: "POST"
- module: zabbixagent
  controller: service
  command: status
  method: "GET"
- module: zabbixagent
  controller: service
  command: stop
  method: "POST"
- module: zabbixagent
  controller: settings
  command: addAlias
  method: "POST"
- module: zabbixagent
  controller: settings
  command: addUserparameter
  method: "POST"
- module: zabbixagent
  controller: settings
  command: delAlias
  method: "POST"
  parameters:
    - $uuid
- module: zabbixagent
  controller: settings
  command: delUserparameter
  method: "POST"
  parameters:
    - $uuid
- module: zabbixagent
  controller: settings
  command: get
  method: "GET"
- module: zabbixagent
  controller: settings
  command: getAlias
  method: "GET"
  parameters:
    - $uuid=null
- module: zabbixagent
  controller: settings
  command: getUserparameter
  method: "GET"
  parameters:
    - $uuid=null
- module: zabbixagent
  controller: settings
  command: searchAliases
  method: "GET"
- module: zabbixagent
  controller: settings
  command: searchUserparameters
  method: "GET"
- module: zabbixagent
  controller: settings
  command: set
  method: "POST"
- module: zabbixagent
  controller: settings
  command: setAlias
  method: "POST"
  parameters:
    - $uuid
- module: zabbixagent
  controller: settings
  command: setUserparameter
  method: "POST"
  parameters:
    - $uuid
- module: zabbixagent
  controller: settings
  command: toggleAlias
  method: "POST"
  parameters:
    - $uuid
- module: zabbixagent
  controller: settings
  command: toggleUserparameter
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: accounts
  command: add
  method: "POST"
- module: acmeclient
  controller: accounts
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: accounts
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: acmeclient
  controller: accounts
  command: register
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: accounts
  command: search
  method: "GET"
- module: acmeclient
  controller: accounts
  command: set
  method: "POST"
- module: acmeclient
  controller: accounts
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: acmeclient
  controller: accounts
  command: update
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: actions
  command: add
  method: "POST"
- module: acmeclient
  controller: actions
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: actions
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: acmeclient
  controller: actions
  command: search
  method: "GET"
- module: acmeclient
  controller: actions
  command: set
  method: "POST"
- module: acmeclient
  controller: actions
  command: sftpGetIdentity
  method: "GET"
- module: acmeclient
  controller: actions
  command: sftpTestConnection
  method: "GET"
- module: acmeclient
  controller: actions
  command: sshGetIdentity
  method: "GET"
- module: acmeclient
  controller: actions
  command: sshTestConnection
  method: "GET"
- module: acmeclient
  controller: actions
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: acmeclient
  controller: actions
  command: update
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: add
  method: "POST"
- module: acmeclient
  controller: certificates
  command: automation
  method: "GET"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: acmeclient
  controller: certificates
  command: import
  method: "GET"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: removekey
  method: "GET"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: revoke
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: search
  method: "GET"
- module: acmeclient
  controller: certificates
  command: set
  method: "POST"
- module: acmeclient
  controller: certificates
  command: sign
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: certificates
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: acmeclient
  controller: certificates
  command: update
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: service
  command: configtest
  method: "GET"
- module: acmeclient
  controller: service
  command: reconfigure
  method: "POST"
- module: acmeclient
  controller: service
  command: reset
  method: "GET"
- module: acmeclient
  controller: service
  command: restart
  method: "POST"
- module: acmeclient
  controller: service
  command: signallcerts
  method: "GET"
- module: acmeclient
  controller: service
  command: start
  method: "POST"
- module: acmeclient
  controller: service
  command: status
  method: "GET"
- module: acmeclient
  controller: service
  command: stop
  method: "POST"
- module: acmeclient
  controller: settings
  command: fetchCronIntegration
  method: "POST"
- module: acmeclient
  controller: settings
  command: fetchHAProxyIntegration
  method: "POST"
- module: acmeclient
  controller: settings
  command: get
  method: "GET"
- module: acmeclient
  controller: settings
  command: getBindPluginStatus
  method: "GET"
- module: acmeclient
  controller: settings
  command: getGcloudPluginStatus
  method: "GET"
- module: acmeclient
  controller: settings
  command: set
  method: "POST"
- module: acmeclient
  controller: validations
  command: add
  method: "POST"
- module: acmeclient
  controller: validations
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: acmeclient
  controller: validations
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: acmeclient
  controller: validations
  command: search
  method: "GET"
- module: acmeclient
  controller: validations
  command: set
  method: "POST"
- module: acmeclient
  controller: validations
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: acmeclient
  controller: validations
  command: update
  method: "POST"
  parameters:
    - $uuid
- module: crowdsec
  controller: alerts
  command: get
  method: "GET"
- module: crowdsec
  controller: bouncers
  command: get
  method: "GET"
- module: crowdsec
  controller: collections
  command: get
  method: "GET"
- module: crowdsec
  controller: decisions
  command: delete
  method: "GET"
  parameters:
    - $decision_id
- module: crowdsec
  controller: decisions
  command: get
  method: "GET"
- module: crowdsec
  controller: general
  command: get
  method: "GET"
- module: crowdsec
  controller: general
  command: set
  method: "POST"
- module: crowdsec
  controller: machines
  command: get
  method: "GET"
- module: crowdsec
  controller: parsers
  command: get
  method: "GET"
- module: crowdsec
  controller: postoverflows
  command: get
  method: "GET"
- module: crowdsec
  controller: scenarios
  command: get
  method: "GET"
- module: crowdsec
  controller: service
  command: debug
  method: "GET"
- module: crowdsec
  controller: service
  command: reload
  method: "POST"
- module: crowdsec
  controller: service
  command: status
  method: "GET"
- module: crowdsec
  controller: version
  command: get
  method: "GET"
- module: nginx
  controller: bans
  command: delban
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: bans
  command: get
  method: "GET"
- module: nginx
  controller: bans
  command: searchban
  method: "GET"
- module: nginx
  controller: bans
  command: set
  method: "POST"
- module: nginx
  controller: logs
  command: accesses
  method: "GET"
  parameters:
    - $uuid=null
    - $fileno=null
    - $page=0
    - $perPage=0
    - $query=""
- module: nginx
  controller: logs
  command: errors
  method: "GET"
  parameters:
    - $uuid=null
    - $fileno=null
    - $page=0
    - $perPage=0
    - $query=""
- module: nginx
  controller: logs
  command: streamaccesses
  method: "GET"
  parameters:
    - $uuid=null
    - $fileno=null
    - $page=0
    - $perPage=0
    - $query=""
- module: nginx
  controller: logs
  command: streamerrors
  method: "GET"
  parameters:
    - $uuid=null
    - $fileno=null
    - $page=0
    - $perPage=0
    - $query=""
- module: nginx
  controller: logs
  command: tlsHandshakes
  method: "GET"
- module: nginx
  controller: service
  command: reconfigure
  method: "POST"
- module: nginx
  controller: service
  command: restart
  method: "POST"
- module: nginx
  controller: service
  command: start
  method: "POST"
- module: nginx
  controller: service
  command: status
  method: "GET"
- module: nginx
  controller: service
  command: stop
  method: "GET"
- module: nginx
  controller: service
  command: vts
  method: "GET"
- module: nginx
  controller: settings
  command: addcachePath
  method: "POST"
- module: nginx
  controller: settings
  command: addcredential
  method: "POST"
- module: nginx
  controller: settings
  command: addcustompolicy
  method: "POST"
- module: nginx
  controller: settings
  command: adderrorpage
  method: "POST"
- module: nginx
  controller: settings
  command: addhttprewrite
  method: "POST"
- module: nginx
  controller: settings
  command: addhttpserver
  method: "POST"
- module: nginx
  controller: settings
  command: addipacl
  method: "POST"
- module: nginx
  controller: settings
  command: addlimitRequestConnection
  method: "POST"
- module: nginx
  controller: settings
  command: addlimitZone
  method: "POST"
- module: nginx
  controller: settings
  command: addlocation
  method: "POST"
- module: nginx
  controller: settings
  command: addnaxsirule
  method: "POST"
- module: nginx
  controller: settings
  command: addsecurityHeader
  method: "POST"
- module: nginx
  controller: settings
  command: addsnifwd
  method: "POST"
- module: nginx
  controller: settings
  command: addstreamserver
  method: "POST"
- module: nginx
  controller: settings
  command: addsyslogTarget
  method: "POST"
- module: nginx
  controller: settings
  command: addtlsFingerprint
  method: "POST"
- module: nginx
  controller: settings
  command: addupstream
  method: "POST"
- module: nginx
  controller: settings
  command: addupstreamserver
  method: "POST"
- module: nginx
  controller: settings
  command: adduserlist
  method: "POST"
- module: nginx
  controller: settings
  command: delcachePath
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delcredential
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delcustompolicy
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delerrorpage
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delhttprewrite
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delhttpserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delipacl
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: dellimitRequestConnection
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: dellimitZone
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: dellocation
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delnaxsirule
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delsecurityHeader
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delsnifwd
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delstreamserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delsyslogTarget
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: deltlsFingerprint
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delupstream
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: delupstreamserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: deluserlist
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: downloadrules
  method: "POST"
- module: nginx
  controller: settings
  command: get
  method: "GET"
- module: nginx
  controller: settings
  command: getcachePath
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getcredential
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getcustompolicy
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: geterrorpage
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: gethttprewrite
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: gethttpserver
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getipacl
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getlimitRequestConnection
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getlimitZone
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getlocation
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getnaxsirule
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getsecurityHeader
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getsnifwd
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getstreamserver
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getsyslogTarget
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: gettlsFingerprint
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getupstream
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getupstreamserver
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: getuserlist
  method: "GET"
  parameters:
    - $uuid=null
- module: nginx
  controller: settings
  command: searchcachePath
  method: "GET"
- module: nginx
  controller: settings
  command: searchcredential
  method: "GET"
- module: nginx
  controller: settings
  command: searchcustompolicy
  method: "GET"
- module: nginx
  controller: settings
  command: searcherrorpage
  method: "GET"
- module: nginx
  controller: settings
  command: searchhttprewrite
  method: "GET"
- module: nginx
  controller: settings
  command: searchhttpserver
  method: "GET"
- module: nginx
  controller: settings
  command: searchipacl
  method: "GET"
- module: nginx
  controller: settings
  command: searchlimitRequestConnection
  method: "GET"
- module: nginx
  controller: settings
  command: searchlimitZone
  method: "GET"
- module: nginx
  controller: settings
  command: searchlocation
  method: "GET"
- module: nginx
  controller: settings
  command: searchnaxsirule
  method: "GET"
- module: nginx
  controller: settings
  command: searchsecurityHeader
  method: "GET"
- module: nginx
  controller: settings
  command: searchsnifwd
  method: "GET"
- module: nginx
  controller: settings
  command: searchstreamserver
  method: "GET"
- module: nginx
  controller: settings
  command: searchsyslogTarget
  method: "GET"
- module: nginx
  controller: settings
  command: searchtlsFingerprint
  method: "GET"
- module: nginx
  controller: settings
  command: searchupstream
  method: "GET"
- module: nginx
  controller: settings
  command: searchupstreamserver
  method: "GET"
- module: nginx
  controller: settings
  command: searchuserlist
  method: "GET"
- module: nginx
  controller: settings
  command: set
  method: "POST"
- module: nginx
  controller: settings
  command: setcachePath
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setcredential
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setcustompolicy
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: seterrorpage
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: sethttprewrite
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: sethttpserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setipacl
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setlimitRequestConnection
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setlimitZone
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setlocation
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setnaxsirule
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setsecurityHeader
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setsnifwd
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setstreamserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setsyslogTarget
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: settlsFingerprint
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setupstream
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setupstreamserver
  method: "POST"
  parameters:
    - $uuid
- module: nginx
  controller: settings
  command: setuserlist
  method: "POST"
  parameters:
    - $uuid
- module: gridexample
  controller: settings
  command: addItem
  method: "POST"
- module: gridexample
  controller: settings
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: gridexample
  controller: settings
  command: get
  method: "GET"
- module: gridexample
  controller: settings
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: gridexample
  controller: settings
  command: searchItem
  method: "GET"
- module: gridexample
  controller: settings
  command: set
  method: "POST"
- module: gridexample
  controller: settings
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: gridexample
  controller: settings
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: bind
  controller: acl
  command: addAcl
  method: "POST"
- module: bind
  controller: acl
  command: delAcl
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: acl
  command: get
  method: "GET"
- module: bind
  controller: acl
  command: getAcl
  method: "GET"
  parameters:
    - $uuid=null
- module: bind
  controller: acl
  command: searchAcl
  method: "GET"
- module: bind
  controller: acl
  command: set
  method: "POST"
- module: bind
  controller: acl
  command: setAcl
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: acl
  command: toggleAcl
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: dnsbl
  command: get
  method: "GET"
- module: bind
  controller: dnsbl
  command: set
  method: "POST"
- module: bind
  controller: domain
  command: addPrimaryDomain
  method: "POST"
  parameters:
    - $uuid=null
- module: bind
  controller: domain
  command: addSecondaryDomain
  method: "POST"
  parameters:
    - $uuid=null
- module: bind
  controller: domain
  command: delDomain
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: domain
  command: get
  method: "GET"
- module: bind
  controller: domain
  command: getDomain
  method: "GET"
  parameters:
    - $uuid=null
- module: bind
  controller: domain
  command: searchMasterDomain
  method: "GET"
- module: bind
  controller: domain
  command: searchPrimaryDomain
  method: "GET"
- module: bind
  controller: domain
  command: searchSecondaryDomain
  method: "GET"
- module: bind
  controller: domain
  command: searchSlaveDomain
  method: "GET"
- module: bind
  controller: domain
  command: set
  method: "POST"
- module: bind
  controller: domain
  command: setDomain
  method: "POST"
  parameters:
    - $uuid=null
- module: bind
  controller: domain
  command: toggleDomain
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: general
  command: get
  method: "GET"
- module: bind
  controller: general
  command: set
  method: "POST"
- module: bind
  controller: record
  command: addRecord
  method: "POST"
- module: bind
  controller: record
  command: delRecord
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: record
  command: get
  method: "GET"
- module: bind
  controller: record
  command: getRecord
  method: "GET"
  parameters:
    - $uuid=null
- module: bind
  controller: record
  command: searchRecord
  method: "GET"
- module: bind
  controller: record
  command: set
  method: "POST"
- module: bind
  controller: record
  command: setRecord
  method: "POST"
  parameters:
    - $uuid=null
- module: bind
  controller: record
  command: toggleRecord
  method: "POST"
  parameters:
    - $uuid
- module: bind
  controller: service
  command: dnsbl
  method: "GET"
- module: bind
  controller: service
  command: reconfigure
  method: "POST"
- module: bind
  controller: service
  command: restart
  method: "POST"
- module: bind
  controller: service
  command: start
  method: "POST"
- module: bind
  controller: service
  command: status
  method: "GET"
- module: bind
  controller: service
  command: stop
  method: "POST"
- module: sslh
  controller: service
  command: reconfigure
  method: "POST"
- module: sslh
  controller: service
  command: restart
  method: "POST"
- module: sslh
  controller: service
  command: start
  method: "POST"
- module: sslh
  controller: service
  command: status
  method: "GET"
- module: sslh
  controller: service
  command: stop
  method: "POST"
- module: sslh
  controller: settings
  command: get
  method: "GET"
- module: sslh
  controller: settings
  command: index
  method: "GET"
- module: sslh
  controller: settings
  command: set
  method: "POST"
- module: nrpe
  controller: command
  command: addCommand
  method: "POST"
- module: nrpe
  controller: command
  command: delCommand
  method: "POST"
  parameters:
    - $uuid
- module: nrpe
  controller: command
  command: get
  method: "GET"
- module: nrpe
  controller: command
  command: getCommand
  method: "GET"
  parameters:
    - $uuid=null
- module: nrpe
  controller: command
  command: searchCommand
  method: "GET"
- module: nrpe
  controller: command
  command: set
  method: "POST"
- module: nrpe
  controller: command
  command: setCommand
  method: "POST"
  parameters:
    - $uuid
- module: nrpe
  controller: command
  command: toggleCommand
  method: "POST"
  parameters:
    - $uuid
- module: nrpe
  controller: general
  command: get
  method: "GET"
- module: nrpe
  controller: general
  command: set
  method: "POST"
- module: nrpe
  controller: service
  command: reconfigure
  method: "POST"
- module: nrpe
  controller: service
  command: restart
  method: "POST"
- module: nrpe
  controller: service
  command: start
  method: "POST"
- module: nrpe
  controller: service
  command: status
  method: "GET"
- module: nrpe
  controller: service
  command: stop
  method: "POST"
- module: apcupsd
  controller: service
  command: getUpsStatus
  method: "GET"
- module: apcupsd
  controller: service
  command: reconfigure
  method: "POST"
- module: apcupsd
  controller: service
  command: restart
  method: "POST"
- module: apcupsd
  controller: service
  command: start
  method: "POST"
- module: apcupsd
  controller: service
  command: status
  method: "GET"
- module: apcupsd
  controller: service
  command: stop
  method: "POST"
- module: apcupsd
  controller: settings
  command: get
  method: "GET"
- module: apcupsd
  controller: settings
  command: set
  method: "POST"
- module: nut
  controller: diagnostics
  command: upsstatus
  method: "GET"
- module: nut
  controller: service
  command: reconfigure
  method: "POST"
- module: nut
  controller: service
  command: restart
  method: "POST"
- module: nut
  controller: service
  command: start
  method: "POST"
- module: nut
  controller: service
  command: status
  method: "GET"
- module: nut
  controller: service
  command: stop
  method: "POST"
- module: nut
  controller: settings
  command: get
  method: "GET"
- module: nut
  controller: settings
  command: set
  method: "POST"
- module: routes
  controller: gateway
  command: status
  method: "GET"
- module: routes
  controller: routes
  command: addroute
  method: "POST"
- module: routes
  controller: routes
  command: delroute
  method: "POST"
  parameters:
    - $uuid
- module: routes
  controller: routes
  command: get
  method: "GET"
- module: routes
  controller: routes
  command: getroute
  method: "GET"
  parameters:
    - $uuid=null
- module: routes
  controller: routes
  command: reconfigure
  method: "POST"
- module: routes
  controller: routes
  command: searchroute
  method: "GET"
- module: routes
  controller: routes
  command: set
  method: "POST"
- module: routes
  controller: routes
  command: setroute
  method: "POST"
  parameters:
    - $uuid
- module: routes
  controller: routes
  command: toggleroute
  method: "POST"
  parameters:
    - $uuid
    - $disabled=null
- module: trafficshaper
  controller: service
  command: flushreload
  method: "POST"
- module: trafficshaper
  controller: service
  command: reconfigure
  method: "POST"
- module: trafficshaper
  controller: service
  command: statistics
  method: "GET"
- module: trafficshaper
  controller: settings
  command: addPipe
  method: "POST"
- module: trafficshaper
  controller: settings
  command: addQueue
  method: "POST"
- module: trafficshaper
  controller: settings
  command: addRule
  method: "POST"
- module: trafficshaper
  controller: settings
  command: delPipe
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: delQueue
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: delRule
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: get
  method: "GET"
- module: trafficshaper
  controller: settings
  command: getPipe
  method: "GET"
  parameters:
    - $uuid=null
- module: trafficshaper
  controller: settings
  command: getQueue
  method: "GET"
  parameters:
    - $uuid=null
- module: trafficshaper
  controller: settings
  command: getRule
  method: "GET"
  parameters:
    - $uuid=null
- module: trafficshaper
  controller: settings
  command: searchPipes
  method: "GET"
- module: trafficshaper
  controller: settings
  command: searchQueues
  method: "GET"
- module: trafficshaper
  controller: settings
  command: searchRules
  method: "GET"
- module: trafficshaper
  controller: settings
  command: set
  method: "POST"
- module: trafficshaper
  controller: settings
  command: setPipe
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: setQueue
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: setRule
  method: "POST"
  parameters:
    - $uuid
- module: trafficshaper
  controller: settings
  command: togglePipe
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: trafficshaper
  controller: settings
  command: toggleQueue
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: trafficshaper
  controller: settings
  command: toggleRule
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: iperf
  controller: instance
  command: get
  method: "GET"
- module: iperf
  controller: instance
  command: query
  method: "GET"
- module: iperf
  controller: instance
  command: set
  method: "GET"
- module: iperf
  controller: service
  command: restart
  method: "GET"
- module: iperf
  controller: service
  command: start
  method: "GET"
- module: iperf
  controller: service
  command: status
  method: "GET"
- module: iperf
  controller: service
  command: stop
  method: "GET"
- module: radsecproxy
  controller: clients
  command: addItem
  method: "POST"
- module: radsecproxy
  controller: clients
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: clients
  command: get
  method: "GET"
- module: radsecproxy
  controller: clients
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: radsecproxy
  controller: clients
  command: searchItem
  method: "GET"
- module: radsecproxy
  controller: clients
  command: set
  method: "POST"
- module: radsecproxy
  controller: clients
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: clients
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: radsecproxy
  controller: general
  command: get
  method: "GET"
- module: radsecproxy
  controller: general
  command: set
  method: "POST"
- module: radsecproxy
  controller: realms
  command: addItem
  method: "POST"
- module: radsecproxy
  controller: realms
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: realms
  command: get
  method: "GET"
- module: radsecproxy
  controller: realms
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: radsecproxy
  controller: realms
  command: searchItem
  method: "GET"
- module: radsecproxy
  controller: realms
  command: set
  method: "POST"
- module: radsecproxy
  controller: realms
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: realms
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: radsecproxy
  controller: rewrites
  command: addItem
  method: "POST"
- module: radsecproxy
  controller: rewrites
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: rewrites
  command: get
  method: "GET"
- module: radsecproxy
  controller: rewrites
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: radsecproxy
  controller: rewrites
  command: searchItem
  method: "GET"
- module: radsecproxy
  controller: rewrites
  command: set
  method: "POST"
- module: radsecproxy
  controller: rewrites
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: rewrites
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: radsecproxy
  controller: servers
  command: addItem
  method: "POST"
- module: radsecproxy
  controller: servers
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: servers
  command: get
  method: "GET"
- module: radsecproxy
  controller: servers
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: radsecproxy
  controller: servers
  command: searchItem
  method: "GET"
- module: radsecproxy
  controller: servers
  command: set
  method: "POST"
- module: radsecproxy
  controller: servers
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: servers
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: radsecproxy
  controller: service
  command: reconfigure
  method: "POST"
- module: radsecproxy
  controller: service
  command: restart
  method: "POST"
- module: radsecproxy
  controller: service
  command: start
  method: "POST"
- module: radsecproxy
  controller: service
  command: status
  method: "GET"
- module: radsecproxy
  controller: service
  command: stop
  method: "POST"
- module: radsecproxy
  controller: tls
  command: addItem
  method: "POST"
- module: radsecproxy
  controller: tls
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: tls
  command: get
  method: "GET"
- module: radsecproxy
  controller: tls
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: radsecproxy
  controller: tls
  command: searchItem
  method: "GET"
- module: radsecproxy
  controller: tls
  command: set
  method: "POST"
- module: radsecproxy
  controller: tls
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: radsecproxy
  controller: tls
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: wol
  controller: wol
  command: addHost
  method: "POST"
- module: wol
  controller: wol
  command: delHost
  method: "POST"
  parameters:
    - $uuid
- module: wol
  controller: wol
  command: get
  method: "GET"
- module: wol
  controller: wol
  command: getHost
  method: "GET"
  parameters:
    - $uuid=null
- module: wol
  controller: wol
  command: getwake
  method: "GET"
- module: wol
  controller: wol
  command: searchHost
  method: "GET"
- module: wol
  controller: wol
  command: set
  method: "POST"
- module: wol
  controller: wol
  command: setHost
  method: "POST"
  parameters:
    - $uuid
- module: wol
  controller: wol
  command: wakeall
  method: "POST"
- module: tor
  controller: exitacl
  command: addacl
  method: "POST"
- module: tor
  controller: exitacl
  command: delacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: exitacl
  command: get
  method: "GET"
- module: tor
  controller: exitacl
  command: getacl
  method: "GET"
  parameters:
    - $uuid=null
- module: tor
  controller: exitacl
  command: searchacl
  method: "GET"
- module: tor
  controller: exitacl
  command: set
  method: "POST"
- module: tor
  controller: exitacl
  command: setacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: exitacl
  command: toggleacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: general
  command: addhidservauth
  method: "POST"
- module: tor
  controller: general
  command: delhidservauth
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: general
  command: get
  method: "GET"
- module: tor
  controller: general
  command: gethidservauth
  method: "GET"
  parameters:
    - $uuid=null
- module: tor
  controller: general
  command: searchhidservauth
  method: "GET"
- module: tor
  controller: general
  command: set
  method: "POST"
- module: tor
  controller: general
  command: sethidservauth
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: general
  command: togglehidservauth
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenservice
  command: addservice
  method: "POST"
- module: tor
  controller: hiddenservice
  command: delservice
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenservice
  command: get
  method: "GET"
- module: tor
  controller: hiddenservice
  command: getservice
  method: "GET"
  parameters:
    - $uuid=null
- module: tor
  controller: hiddenservice
  command: searchservice
  method: "GET"
- module: tor
  controller: hiddenservice
  command: set
  method: "POST"
- module: tor
  controller: hiddenservice
  command: setservice
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenservice
  command: toggleservice
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenserviceacl
  command: addacl
  method: "POST"
- module: tor
  controller: hiddenserviceacl
  command: delacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenserviceacl
  command: get
  method: "GET"
- module: tor
  controller: hiddenserviceacl
  command: getacl
  method: "GET"
  parameters:
    - $uuid=null
- module: tor
  controller: hiddenserviceacl
  command: searchacl
  method: "GET"
- module: tor
  controller: hiddenserviceacl
  command: set
  method: "POST"
- module: tor
  controller: hiddenserviceacl
  command: setacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: hiddenserviceacl
  command: toggleacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: relay
  command: get
  method: "GET"
- module: tor
  controller: relay
  command: set
  method: "POST"
- module: tor
  controller: service
  command: circuits
  method: "GET"
- module: tor
  controller: service
  command: getHiddenServices
  method: "GET"
- module: tor
  controller: service
  command: reconfigure
  method: "POST"
- module: tor
  controller: service
  command: restart
  method: "POST"
- module: tor
  controller: service
  command: start
  method: "POST"
- module: tor
  controller: service
  command: status
  method: "GET"
- module: tor
  controller: service
  command: stop
  method: "POST"
- module: tor
  controller: service
  command: streams
  method: "GET"
- module: tor
  controller: socksacl
  command: addacl
  method: "POST"
- module: tor
  controller: socksacl
  command: delacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: socksacl
  command: get
  method: "GET"
- module: tor
  controller: socksacl
  command: getacl
  method: "GET"
  parameters:
    - $uuid=null
- module: tor
  controller: socksacl
  command: searchacl
  method: "GET"
- module: tor
  controller: socksacl
  command: set
  method: "POST"
- module: tor
  controller: socksacl
  command: setacl
  method: "POST"
  parameters:
    - $uuid
- module: tor
  controller: socksacl
  command: toggleacl
  method: "POST"
  parameters:
    - $uuid
- module: syslog
  controller: service
  command: reconfigure
  method: "POST"
- module: syslog
  controller: service
  command: restart
  method: "POST"
- module: syslog
  controller: service
  command: start
  method: "POST"
- module: syslog
  controller: service
  command: stats
  method: "GET"
- module: syslog
  controller: service
  command: status
  method: "GET"
- module: syslog
  controller: service
  command: stop
  method: "POST"
- module: syslog
  controller: settings
  command: addDestination
  method: "POST"
- module: syslog
  controller: settings
  command: delDestination
  method: "POST"
  parameters:
    - $uuid
- module: syslog
  controller: settings
  command: get
  method: "GET"
- module: syslog
  controller: settings
  command: getDestination
  method: "GET"
  parameters:
    - $uuid=null
- module: syslog
  controller: settings
  command: searchDestinations
  method: "GET"
- module: syslog
  controller: settings
  command: set
  method: "POST"
- module: syslog
  controller: settings
  command: setDestination
  method: "POST"
  parameters:
    - $uuid
- module: syslog
  controller: settings
  command: toggleDestination
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: mdnsrepeater
  controller: service
  command: restart
  method: "GET"
- module: mdnsrepeater
  controller: service
  command: start
  method: "GET"
- module: mdnsrepeater
  controller: service
  command: status
  method: "GET"
- module: mdnsrepeater
  controller: service
  command: stop
  method: "GET"
- module: mdnsrepeater
  controller: settings
  command: get
  method: "GET"
- module: mdnsrepeater
  controller: settings
  command: set
  method: "POST"
- module: netsnmp
  controller: general
  command: get
  method: "GET"
- module: netsnmp
  controller: general
  command: set
  method: "POST"
- module: netsnmp
  controller: service
  command: reconfigure
  method: "POST"
- module: netsnmp
  controller: service
  command: restart
  method: "POST"
- module: netsnmp
  controller: service
  command: start
  method: "POST"
- module: netsnmp
  controller: service
  command: status
  method: "GET"
- module: netsnmp
  controller: service
  command: stop
  method: "POST"
- module: netsnmp
  controller: user
  command: addUser
  method: "POST"
- module: netsnmp
  controller: user
  command: delUser
  method: "POST"
  parameters:
    - $uuid
- module: netsnmp
  controller: user
  command: get
  method: "GET"
- module: netsnmp
  controller: user
  command: getUser
  method: "GET"
  parameters:
    - $uuid=null
- module: netsnmp
  controller: user
  command: searchUser
  method: "GET"
- module: netsnmp
  controller: user
  command: set
  method: "POST"
- module: netsnmp
  controller: user
  command: setUser
  method: "POST"
  parameters:
    - $uuid
- module: netsnmp
  controller: user
  command: toggleUser
  method: "POST"
  parameters:
    - $uuid
- module: core
  controller: firmware
  command: audit
  method: "POST"
- module: core
  controller: firmware
  command: changelog
  method: "POST"
  parameters:
    - $version
- module: core
  controller: firmware
  command: check
  method: "POST"
- module: core
  controller: firmware
  command: connection
  method: "POST"
- module: core
  controller: firmware
  command: details
  method: "POST"
  parameters:
    - $package
- module: core
  controller: firmware
  command: get
  method: "GET"
- module: core
  controller: firmware
  command: getOptions
  method: "GET"
- module: core
  controller: firmware
  command: health
  method: "POST"
- module: core
  controller: firmware
  command: info
  method: "GET"
- module: core
  controller: firmware
  command: install
  method: "POST"
  parameters:
    - $pkg_name
- module: core
  controller: firmware
  command: license
  method: "POST"
  parameters:
    - $package
- module: core
  controller: firmware
  command: lock
  method: "POST"
  parameters:
    - $pkg_name
- module: core
  controller: firmware
  command: log
  method: "POST"
  parameters:
    - $clear
- module: core
  controller: firmware
  command: poweroff
  method: "POST"
- module: core
  controller: firmware
  command: reboot
  method: "POST"
- module: core
  controller: firmware
  command: reinstall
  method: "POST"
  parameters:
    - $pkg_name
- module: core
  controller: firmware
  command: remove
  method: "POST"
  parameters:
    - $pkg_name
- module: core
  controller: firmware
  command: resyncPlugins
  method: "POST"
- module: core
  controller: firmware
  command: running
  method: "GET"
- module: core
  controller: firmware
  command: set
  method: "POST"
- module: core
  controller: firmware
  command: status
  method: "POST"
- module: core
  controller: firmware
  command: syncPlugins
  method: "POST"
- module: core
  controller: firmware
  command: unlock
  method: "POST"
  parameters:
    - $pkg_name
- module: core
  controller: firmware
  command: update
  method: "POST"
- module: core
  controller: firmware
  command: upgrade
  method: "POST"
- module: core
  controller: firmware
  command: upgradestatus
  method: "GET"
- module: core
  controller: menu
  command: search
  method: "GET"
- module: core
  controller: menu
  command: tree
  method: "GET"
- module: core
  controller: service
  command: restart
  method: "POST"
  parameters:
    - $name
    - $id=''
- module: core
  controller: service
  command: search
  method: "GET"
- module: core
  controller: service
  command: start
  method: "POST"
  parameters:
    - $name
    - $id=''
- module: core
  controller: service
  command: stop
  method: "POST"
  parameters:
    - $name
    - $id=''
- module: core
  controller: system
  command: dismissStatus
  method: "POST"
- module: core
  controller: system
  command: halt
  method: "POST"
- module: core
  controller: system
  command: reboot
  method: "POST"
- module: core
  controller: system
  command: status
  method: "GET"
- module: vnstat
  controller: general
  command: get
  method: "GET"
- module: vnstat
  controller: general
  command: set
  method: "POST"
- module: vnstat
  controller: service
  command: daily
  method: "GET"
- module: vnstat
  controller: service
  command: hourly
  method: "GET"
- module: vnstat
  controller: service
  command: monthly
  method: "GET"
- module: vnstat
  controller: service
  command: reconfigure
  method: "POST"
- module: vnstat
  controller: service
  command: resetdb
  method: "GET"
- module: vnstat
  controller: service
  command: restart
  method: "POST"
- module: vnstat
  controller: service
  command: start
  method: "POST"
- module: vnstat
  controller: service
  command: status
  method: "GET"
- module: vnstat
  controller: service
  command: stop
  method: "POST"
- module: vnstat
  controller: service
  command: yearly
  method: "GET"
- module: unbound
  controller: diagnostics
  command: dumpcache
  method: "GET"
- module: unbound
  controller: diagnostics
  command: dumpinfra
  method: "GET"
- module: unbound
  controller: diagnostics
  command: listinsecure
  method: "GET"
- module: unbound
  controller: diagnostics
  command: listlocaldata
  method: "GET"
- module: unbound
  controller: diagnostics
  command: listlocalzones
  method: "GET"
- module: unbound
  controller: diagnostics
  command: stats
  method: "GET"
- module: unbound
  controller: overview
  command: Rolling
  method: "GET"
  parameters:
    - $timeperiod
    - $clients='0'
- module: unbound
  controller: overview
  command: isBlockListEnabled
  method: "GET"
- module: unbound
  controller: overview
  command: isEnabled
  method: "GET"
- module: unbound
  controller: overview
  command: searchQueries
  method: "GET"
- module: unbound
  controller: overview
  command: totals
  method: "GET"
  parameters:
    - $maximum
- module: unbound
  controller: service
  command: dnsbl
  method: "GET"
- module: unbound
  controller: service
  command: reconfigure
  method: "POST"
- module: unbound
  controller: service
  command: reconfigureGeneral
  method: "GET"
- module: unbound
  controller: service
  command: restart
  method: "POST"
- module: unbound
  controller: service
  command: start
  method: "POST"
- module: unbound
  controller: service
  command: status
  method: "GET"
- module: unbound
  controller: service
  command: stop
  method: "POST"
- module: unbound
  controller: settings
  command: addAcl
  method: "POST"
- module: unbound
  controller: settings
  command: addDomainOverride
  method: "POST"
- module: unbound
  controller: settings
  command: addForward
  method: "POST"
- module: unbound
  controller: settings
  command: addHostAlias
  method: "POST"
- module: unbound
  controller: settings
  command: addHostOverride
  method: "POST"
- module: unbound
  controller: settings
  command: delAcl
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: delDomainOverride
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: delForward
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: delHostAlias
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: delHostOverride
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: get
  method: "GET"
- module: unbound
  controller: settings
  command: getAcl
  method: "GET"
  parameters:
    - $uuid=null
- module: unbound
  controller: settings
  command: getDomainOverride
  method: "GET"
  parameters:
    - $uuid=null
- module: unbound
  controller: settings
  command: getForward
  method: "GET"
  parameters:
    - $uuid=null
- module: unbound
  controller: settings
  command: getHostAlias
  method: "GET"
  parameters:
    - $uuid=null
- module: unbound
  controller: settings
  command: getHostOverride
  method: "GET"
  parameters:
    - $uuid=null
- module: unbound
  controller: settings
  command: getNameservers
  method: "GET"
- module: unbound
  controller: settings
  command: searchAcl
  method: "GET"
- module: unbound
  controller: settings
  command: searchDomainOverride
  method: "GET"
- module: unbound
  controller: settings
  command: searchForward
  method: "GET"
- module: unbound
  controller: settings
  command: searchHostAlias
  method: "GET"
- module: unbound
  controller: settings
  command: searchHostOverride
  method: "GET"
- module: unbound
  controller: settings
  command: set
  method: "POST"
- module: unbound
  controller: settings
  command: setAcl
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: setDomainOverride
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: setForward
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: setHostAlias
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: setHostOverride
  method: "POST"
  parameters:
    - $uuid
- module: unbound
  controller: settings
  command: toggleAcl
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: unbound
  controller: settings
  command: toggleDomainOverride
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: unbound
  controller: settings
  command: toggleForward
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: unbound
  controller: settings
  command: toggleHostAlias
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: unbound
  controller: settings
  command: toggleHostOverride
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: unbound
  controller: settings
  command: updateBlocklist
  method: "POST"
- module: netdata
  controller: general
  command: get
  method: "GET"
- module: netdata
  controller: general
  command: set
  method: "POST"
- module: netdata
  controller: service
  command: reconfigure
  method: "POST"
- module: netdata
  controller: service
  command: restart
  method: "POST"
- module: netdata
  controller: service
  command: start
  method: "POST"
- module: netdata
  controller: service
  command: status
  method: "GET"
- module: netdata
  controller: service
  command: stop
  method: "POST"
- module: stunnel
  controller: service
  command: reconfigure
  method: "POST"
- module: stunnel
  controller: service
  command: restart
  method: "POST"
- module: stunnel
  controller: service
  command: start
  method: "POST"
- module: stunnel
  controller: service
  command: status
  method: "GET"
- module: stunnel
  controller: service
  command: stop
  method: "POST"
- module: stunnel
  controller: services
  command: addItem
  method: "POST"
- module: stunnel
  controller: services
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: stunnel
  controller: services
  command: get
  method: "GET"
- module: stunnel
  controller: services
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: stunnel
  controller: services
  command: searchItem
  method: "GET"
- module: stunnel
  controller: services
  command: set
  method: "POST"
- module: stunnel
  controller: services
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: stunnel
  controller: services
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: connections
  command: addChild
  method: "POST"
- module: ipsec
  controller: connections
  command: addConnection
  method: "POST"
- module: ipsec
  controller: connections
  command: addLocal
  method: "POST"
- module: ipsec
  controller: connections
  command: addRemote
  method: "POST"
- module: ipsec
  controller: connections
  command: connectionExists
  method: "GET"
  parameters:
    - $uuid
- module: ipsec
  controller: connections
  command: delChild
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: connections
  command: delConnection
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: connections
  command: delLocal
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: connections
  command: delRemote
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: connections
  command: get
  method: "GET"
- module: ipsec
  controller: connections
  command: getChild
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: getConnection
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: getLocal
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: getRemote
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: isEnabled
  method: "GET"
- module: ipsec
  controller: connections
  command: searchChild
  method: "GET"
- module: ipsec
  controller: connections
  command: searchConnection
  method: "GET"
- module: ipsec
  controller: connections
  command: searchLocal
  method: "GET"
- module: ipsec
  controller: connections
  command: searchRemote
  method: "GET"
- module: ipsec
  controller: connections
  command: set
  method: "POST"
- module: ipsec
  controller: connections
  command: setChild
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: setConnection
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: setLocal
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: setRemote
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: connections
  command: toggle
  method: "POST"
  parameters:
    - $enabled=null
- module: ipsec
  controller: connections
  command: toggleChild
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: connections
  command: toggleConnection
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: connections
  command: toggleLocal
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: connections
  command: toggleRemote
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: key_pairs
  command: addItem
  method: "POST"
- module: ipsec
  controller: key_pairs
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: key_pairs
  command: genKeyPair
  method: "GET"
  parameters:
    - $type
    - $size=null
- module: ipsec
  controller: key_pairs
  command: get
  method: "GET"
- module: ipsec
  controller: key_pairs
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: key_pairs
  command: searchItem
  method: "GET"
- module: ipsec
  controller: key_pairs
  command: set
  method: "POST"
- module: ipsec
  controller: key_pairs
  command: setItem
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: leases
  command: pools
  method: "GET"
- module: ipsec
  controller: leases
  command: search
  method: "GET"
- module: ipsec
  controller: legacy_subsystem
  command: applyConfig
  method: "POST"
- module: ipsec
  controller: legacy_subsystem
  command: status
  method: "GET"
- module: ipsec
  controller: manual_spd
  command: add
  method: "POST"
- module: ipsec
  controller: manual_spd
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: manual_spd
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: manual_spd
  command: search
  method: "GET"
- module: ipsec
  controller: manual_spd
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: manual_spd
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: pools
  command: add
  method: "POST"
- module: ipsec
  controller: pools
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: pools
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: pools
  command: search
  method: "GET"
- module: ipsec
  controller: pools
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: pools
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: ipsec
  controller: pre_shared_keys
  command: addItem
  method: "POST"
- module: ipsec
  controller: pre_shared_keys
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: pre_shared_keys
  command: get
  method: "GET"
- module: ipsec
  controller: pre_shared_keys
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: pre_shared_keys
  command: searchItem
  method: "GET"
- module: ipsec
  controller: pre_shared_keys
  command: set
  method: "POST"
- module: ipsec
  controller: pre_shared_keys
  command: setItem
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: sad
  command: delete
  method: "POST"
  parameters:
    - $id
- module: ipsec
  controller: sad
  command: search
  method: "GET"
- module: ipsec
  controller: service
  command: reconfigure
  method: "POST"
- module: ipsec
  controller: service
  command: restart
  method: "POST"
- module: ipsec
  controller: service
  command: start
  method: "POST"
- module: ipsec
  controller: service
  command: status
  method: "GET"
- module: ipsec
  controller: service
  command: stop
  method: "POST"
- module: ipsec
  controller: sessions
  command: connect
  method: "POST"
  parameters:
    - $id
- module: ipsec
  controller: sessions
  command: disconnect
  method: "POST"
  parameters:
    - $id
- module: ipsec
  controller: sessions
  command: searchPhase1
  method: "GET"
- module: ipsec
  controller: sessions
  command: searchPhase2
  method: "GET"
- module: ipsec
  controller: spd
  command: delete
  method: "POST"
  parameters:
    - $id
- module: ipsec
  controller: spd
  command: search
  method: "GET"
- module: ipsec
  controller: tunnel
  command: delPhase1
  method: "POST"
  parameters:
    - $ikeid
- module: ipsec
  controller: tunnel
  command: delPhase2
  method: "POST"
  parameters:
    - $seqid
- module: ipsec
  controller: tunnel
  command: searchPhase1
  method: "GET"
- module: ipsec
  controller: tunnel
  command: searchPhase2
  method: "GET"
- module: ipsec
  controller: tunnel
  command: toggle
  method: "POST"
  parameters:
    - $enabled=null
- module: ipsec
  controller: tunnel
  command: togglePhase1
  method: "POST"
  parameters:
    - $ikeid
    - $enabled=null
- module: ipsec
  controller: tunnel
  command: togglePhase2
  method: "POST"
  parameters:
    - $seqid
    - $enabled=null
- module: ipsec
  controller: vti
  command: add
  method: "POST"
- module: ipsec
  controller: vti
  command: del
  method: "POST"
  parameters:
    - $uuid
- module: ipsec
  controller: vti
  command: get
  method: "GET"
  parameters:
    - $uuid=null
- module: ipsec
  controller: vti
  command: search
  method: "GET"
- module: ipsec
  controller: vti
  command: set
  method: "POST"
  parameters:
    - $uuid=null
- module: ipsec
  controller: vti
  command: toggle
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: qemuguestagent
  controller: service
  command: reconfigure
  method: "POST"
- module: qemuguestagent
  controller: service
  command: restart
  method: "POST"
- module: qemuguestagent
  controller: service
  command: start
  method: "POST"
- module: qemuguestagent
  controller: service
  command: status
  method: "GET"
- module: qemuguestagent
  controller: service
  command: stop
  method: "POST"
- module: qemuguestagent
  controller: settings
  command: get
  method: "GET"
- module: qemuguestagent
  controller: settings
  command: set
  method: "POST"
- module: ntopng
  controller: general
  command: get
  method: "GET"
- module: ntopng
  controller: general
  command: set
  method: "POST"
- module: ntopng
  controller: service
  command: checkredis
  method: "GET"
- module: ntopng
  controller: service
  command: reconfigure
  method: "POST"
- module: ntopng
  controller: service
  command: restart
  method: "POST"
- module: ntopng
  controller: service
  command: start
  method: "POST"
- module: ntopng
  controller: service
  command: status
  method: "GET"
- module: ntopng
  controller: service
  command: stop
  method: "POST"
- module: tayga
  controller: general
  command: get
  method: "GET"
- module: tayga
  controller: general
  command: set
  method: "POST"
- module: tayga
  controller: service
  command: reconfigure
  method: "POST"
- module: tayga
  controller: service
  command: restart
  method: "POST"
- module: tayga
  controller: service
  command: start
  method: "POST"
- module: tayga
  controller: service
  command: status
  method: "GET"
- module: tayga
  controller: service
  command: stop
  method: "POST"
- module: proxysso
  controller: service
  command: createkeytab
  method: "POST"
- module: proxysso
  controller: service
  command: deletekeytab
  method: "GET"
- module: proxysso
  controller: service
  command: getCheckList
  method: "GET"
- module: proxysso
  controller: service
  command: showkeytab
  method: "GET"
- module: proxysso
  controller: service
  command: testkerblogin
  method: "POST"
- module: proxysso
  controller: settings
  command: get
  method: "GET"
- module: proxysso
  controller: settings
  command: set
  method: "POST"
- module: dhcpv6
  controller: leases
  command: delLease
  method: "POST"
  parameters:
    - $ip
- module: dhcpv6
  controller: leases
  command: searchLease
  method: "GET"
- module: dhcpv6
  controller: leases
  command: searchPrefix
  method: "GET"
- module: dhcpv6
  controller: service
  command: reconfigure
  method: "POST"
- module: dhcpv6
  controller: service
  command: restart
  method: "POST"
- module: dhcpv6
  controller: service
  command: start
  method: "POST"
- module: dhcpv6
  controller: service
  command: status
  method: "GET"
- module: dhcpv6
  controller: service
  command: stop
  method: "POST"
- module: firewall
  controller: alias
  command: addItem
  method: "POST"
- module: firewall
  controller: alias
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: alias
  command: export
  method: "GET"
- module: firewall
  controller: alias
  command: get
  method: "GET"
- module: firewall
  controller: alias
  command: getAliasUUID
  method: "GET"
  parameters:
    - $name
- module: firewall
  controller: alias
  command: getGeoIP
  method: "GET"
- module: firewall
  controller: alias
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: firewall
  controller: alias
  command: getTableSize
  method: "GET"
- module: firewall
  controller: alias
  command: import
  method: "POST"
- module: firewall
  controller: alias
  command: listCategories
  method: "GET"
- module: firewall
  controller: alias
  command: listCountries
  method: "GET"
- module: firewall
  controller: alias
  command: listNetworkAliases
  method: "GET"
- module: firewall
  controller: alias
  command: listUserGroups
  method: "GET"
- module: firewall
  controller: alias
  command: reconfigure
  method: "POST"
- module: firewall
  controller: alias
  command: searchItem
  method: "GET"
- module: firewall
  controller: alias
  command: set
  method: "POST"
- module: firewall
  controller: alias
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: alias
  command: toggleItem
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: firewall
  controller: alias_util
  command: add
  method: "POST"
  parameters:
    - $alias
- module: firewall
  controller: alias_util
  command: aliases
  method: "GET"
- module: firewall
  controller: alias_util
  command: delete
  method: "POST"
  parameters:
    - $alias
- module: firewall
  controller: alias_util
  command: findReferences
  method: "POST"
- module: firewall
  controller: alias_util
  command: flush
  method: "POST"
  parameters:
    - $alias
- module: firewall
  controller: alias_util
  command: list
  method: "GET"
  parameters:
    - $alias
- module: firewall
  controller: alias_util
  command: updateBogons
  method: "GET"
- module: firewall
  controller: category
  command: addItem
  method: "POST"
- module: firewall
  controller: category
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: category
  command: get
  method: "GET"
- module: firewall
  controller: category
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: firewall
  controller: category
  command: searchItem
  method: "GET"
- module: firewall
  controller: category
  command: searchNoCategoryItem
  method: "GET"
- module: firewall
  controller: category
  command: set
  method: "POST"
- module: firewall
  controller: category
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: filter_util
  command: ruleStats
  method: "GET"
- module: firewall
  controller: group
  command: addItem
  method: "POST"
- module: firewall
  controller: group
  command: delItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: group
  command: get
  method: "GET"
- module: firewall
  controller: group
  command: getItem
  method: "GET"
  parameters:
    - $uuid=null
- module: firewall
  controller: group
  command: reconfigure
  method: "POST"
- module: firewall
  controller: group
  command: searchItem
  method: "GET"
- module: firewall
  controller: group
  command: set
  method: "POST"
- module: firewall
  controller: group
  command: setItem
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: filter_base
  command: apply
  method: "POST"
  parameters:
    - $rollback_revision=null
- module: firewall
  controller: filter_base
  command: cancelRollback
  method: "POST"
  parameters:
    - $rollback_revision
- module: firewall
  controller: filter_base
  command: get
  method: "GET"
- module: firewall
  controller: filter_base
  command: revert
  method: "POST"
  parameters:
    - $revision
- module: firewall
  controller: filter_base
  command: savepoint
  method: "POST"
- module: firewall
  controller: filter_base
  command: set
  method: "POST"
- module: firewall
  controller: filter
  command: addRule
  method: "POST"
- module: firewall
  controller: filter
  command: delRule
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: filter
  command: getRule
  method: "GET"
  parameters:
    - $uuid=null
- module: firewall
  controller: filter
  command: searchRule
  method: "GET"
- module: firewall
  controller: filter
  command: setRule
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: filter
  command: toggleRule
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: firewall
  controller: source_nat
  command: addRule
  method: "POST"
- module: firewall
  controller: source_nat
  command: delRule
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: source_nat
  command: getRule
  method: "GET"
  parameters:
    - $uuid=null
- module: firewall
  controller: source_nat
  command: searchRule
  method: "GET"
- module: firewall
  controller: source_nat
  command: setRule
  method: "POST"
  parameters:
    - $uuid
- module: firewall
  controller: source_nat
  command: toggleRule
  method: "POST"
  parameters:
    - $uuid
    - $enabled=null
- module: proxy
  controller: service
  command: downloadacls
  method: "POST"
- module: proxy
  controller: service
  command: fetchacls
  method: "POST"
- module: proxy
  controller: service
  command: reconfigure
  method: "POST"
- module: proxy
  controller: service
  command: refreshTemplate
  method: "POST"
- module: proxy
  controller: service
  command: reset
  method: "POST"
- module: proxy
  controller: service
  command: restart
  method: "GET"
- module: proxy
  controller: service
  command: start
  method: "GET"
- module: proxy
  controller: service
  command: status
  method: "GET"
- module: proxy
  controller: service
  command: stop
  method: "POST"
- module: proxy
  controller: settings
  command: addPACMatch
  method: "POST"
- module: proxy
  controller: settings
  command: addPACProxy
  method: "POST"
- module: proxy
  controller: settings
  command: addPACRule
  method: "POST"
- module: proxy
  controller: settings
  command: addRemoteBlacklist
  method: "POST"
- module: proxy
  controller: settings
  command: delPACMatch
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: delPACProxy
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: delPACRule
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: delRemoteBlacklist
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: fetchRBCron
  method: "POST"
- module: proxy
  controller: settings
  command: get
  method: "GET"
- module: proxy
  controller: settings
  command: getPACMatch
  method: "GET"
  parameters:
    - $uuid=null
- module: proxy
  controller: settings
  command: getPACProxy
  method: "GET"
  parameters:
    - $uuid=null
- module: proxy
  controller: settings
  command: getPACRule
  method: "GET"
  parameters:
    - $uuid=null
- module: proxy
  controller: settings
  command: getRemoteBlacklist
  method: "GET"
  parameters:
    - $uuid=null
- module: proxy
  controller: settings
  command: searchPACMatch
  method: "GET"
- module: proxy
  controller: settings
  command: searchPACProxy
  method: "GET"
- module: proxy
  controller: settings
  command: searchPACRule
  method: "GET"
- module: proxy
  controller: settings
  command: searchRemoteBlacklists
  method: "GET"
- module: proxy
  controller: settings
  command: set
  method: "POST"
- module: proxy
  controller: settings
  command: setPACMatch
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: setPACProxy
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: setPACRule
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: setRemoteBlacklist
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: togglePACRule
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: settings
  command: toggleRemoteBlacklist
  method: "POST"
  parameters:
    - $uuid
- module: proxy
  controller: template
  command: get
  method: "GET"
- module: proxy
  controller: template
  command: reset
  method: "POST"
- module: proxy
  controller: template
  command: set
  method: "POST"
- module: cicap
  controller: antivirus
  command: get
  method: "GET"
- module: cicap
  controller: antivirus
  command: set
  method: "POST"
- module: cicap
  controller: general
  command: get
  method: "GET"
- module: cicap
  controller: general
  command: set
  method: "POST"
- module: cicap
  controller: service
  command: checkclamav
  method: "GET"
- module: cicap
  controller: service
  command: reconfigure
  method: "POST"
- module: cicap
  controller: service
  command: restart
  method: "POST"
- module: cicap
  controller: service
  command: start
  method: "POST"
- module: cicap
  controller: service
  command: status
  method: "GET"
- module: cicap
  controller: service
  command: stop
  method: "POST"